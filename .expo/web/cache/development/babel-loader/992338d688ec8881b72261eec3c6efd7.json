{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from \"../../../components/Button\";\nimport { Section, Text } from \"../../../components/Layout\";\nimport { PressableSection } from \"../../../components/Layout/styles\";\nimport { ModalCenteredView, ModalView, Row } from \"../Modal/styles\";\nimport Header from \"../../../components/Header\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default (function (_ref) {\n  var _ref$buttonStyle = _ref.buttonStyle,\n      buttonStyle = _ref$buttonStyle === void 0 ? {\n    borderRadius: 50,\n    backgroundColor: \"#C4C4C4\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 15,\n    marginTop: 10\n  } : _ref$buttonStyle,\n      buttonText = _ref.buttonText,\n      onOtpValidate = _ref.onOtpValidate;\n  var textInputRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      code = _useState4[0],\n      setCode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pinReady = _useState6[0],\n      setPinReady = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputFocused = _useState8[0],\n      setinputfocused = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showOtpInput = _useState10[0],\n      setShowOtpInput = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      values = _useState12[0],\n      setValue = _useState12[1];\n\n  var navigation = useNavigation();\n  var NumPins = new Array(4).fill(0);\n  useEffect(function () {\n    setPinReady(code.length === 4);\n    return setPinReady(true);\n  }, [code]);\n\n  var handleOnBlur = function handleOnBlur() {\n    return setinputfocused(true);\n  };\n\n  var toCodeDigitInput = function toCodeDigitInput(_val, i) {\n    var emptyChar = \" \";\n    var digit = code[i] || emptyChar;\n    var isCurrentDigit = i === code.length;\n    var isLastDigit = i === code.length - 1;\n    var isCodeFull = code.length === 4;\n    var isDigitFocused = isCurrentDigit || isLastDigit && isCodeFull;\n    return _jsx(Text, {\n      style: {\n        backgroundColor: \"#4E4E4E\",\n        borderWidth: 1,\n        borderColor: \"#fff\",\n        width: 48,\n        height: 48,\n        borderRadius: 50,\n        textAlign: \"center\",\n        textAlignVertical: \"center\",\n        justifyContent: \"center\",\n        fontWeight: \"bold\",\n        fontSize: 20,\n        color: \"#ffffff\"\n      },\n      children: digit\n    }, i);\n  };\n\n  var handleOnPress = function handleOnPress() {\n    var _textInputRef$current;\n\n    setinputfocused(true);\n    textInputRef == null ? void 0 : (_textInputRef$current = textInputRef.current) == null ? void 0 : _textInputRef$current.focus(false);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(ModalCenteredView, {\n        children: _jsxs(ModalView, {\n          style: {\n            backgroundColor: \"#4E4E4E\",\n            alignItems: \"flex-start\"\n          },\n          children: [_jsx(Header, {\n            iconEnd: require(\"../../../../assets/cancel.png\")\n          }), _jsx(Text, {\n            style: {\n              textAlign: \"left\",\n              fontSize: 25\n            },\n            children: showOtpInput ? \"Input PIN\" : \"Authentication\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 15\n            },\n            children: showOtpInput ? \"Admin will send a 4 digit pin to be inputed below. \" : \"Select authentication mode\"\n          }), _jsxs(Section, {\n            style: {\n              width: 280\n            },\n            children: [showOtpInput && _jsx(PressableSection, {\n              onPress: handleOnPress,\n              style: {\n                justifyContent: \"space-evenly\",\n                flexDirection: \"row\"\n              },\n              children: NumPins.map(toCodeDigitInput)\n            }), _jsx(TextInput, {\n              style: {\n                position: \"absolute\",\n                width: 1,\n                height: 1,\n                opacity: 0\n              },\n              value: code,\n              onChangeText: setCode,\n              maxLength: 5,\n              returnKeyType: \"done\",\n              keyboardType: \"number-pad\",\n              textContentType: \"oneTimeCode\",\n              ref: textInputRef,\n              onBlur: handleOnBlur\n            }), _jsx(Button, {\n              onPress: function onPress() {\n                return navigation.navigate('resetPassword');\n              },\n              style: {\n                marginBottom: 25,\n                borderRadius: 50,\n                paddingHorizontal: 25,\n                backgroundColor: \"#4E4E4E\"\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: \"#fff\"\n                },\n                children: showOtpInput ? \"Submit\" : \"Input Pin\"\n              })\n            }), _jsx(Button, {\n              onPress: showOtpInput ? function () {\n                setModalVisible(false);\n                onOtpValidate();\n              } : null,\n              style: {\n                borderRadius: 50,\n                paddingHorizontal: 25\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: \"#fff\"\n                },\n                children: showOtpInput ? \"Resend PIN\" : \"Request PIN\"\n              })\n            })]\n          })]\n        })\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        setModalVisible(true);\n      },\n      style: [buttonStyle],\n      children: _jsx(Text, {\n        style: {\n          fontWeight: \"500\",\n          color: \"#000\",\n          fontSize: 15\n        },\n        children: \"Enter Pin\"\n      })\n    })]\n  });\n});","map":{"version":3,"names":["useRef","useState","useEffect","Button","Section","Text","PressableSection","ModalCenteredView","ModalView","Row","Header","useNavigation","buttonStyle","borderRadius","backgroundColor","justifyContent","alignItems","paddingVertical","marginTop","buttonText","onOtpValidate","textInputRef","modalVisible","setModalVisible","code","setCode","pinReady","setPinReady","inputFocused","setinputfocused","showOtpInput","setShowOtpInput","values","setValue","navigation","NumPins","Array","fill","length","handleOnBlur","toCodeDigitInput","_val","i","emptyChar","digit","isCurrentDigit","isLastDigit","isCodeFull","isDigitFocused","borderWidth","borderColor","width","height","textAlign","textAlignVertical","fontWeight","fontSize","color","handleOnPress","current","focus","require","flexDirection","map","position","opacity","navigate","marginBottom","paddingHorizontal"],"sources":["C:/Users/karowrld/Yoris/src/features/account/otpInputModal/index.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\r\nimport { Modal, Pressable, TextInput, View } from \"react-native\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { Section, Text } from \"../../../components/Layout\";\r\nimport { PressableSection } from \"../../../components/Layout/styles\";\r\nimport { ModalCenteredView, ModalView, Row } from \"../Modal/styles\";\r\nimport Header from \"../../../components/Header\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default ({\r\n  buttonStyle = {\r\n    borderRadius: 50,\r\n    backgroundColor: \"#C4C4C4\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 15,\r\n    marginTop: 10,\r\n  },\r\n  buttonText,\r\n  onOtpValidate\r\n}) => {\r\n  const textInputRef = useRef();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [code, setCode] = useState(0);\r\n  const [pinReady, setPinReady] = useState(false);\r\n  const [inputFocused, setinputfocused] = useState(false);\r\n  const [showOtpInput, setShowOtpInput] = useState(true);\r\n  const [values, setValue] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  const NumPins = new Array(4).fill(0);\r\n\r\n  useEffect(() => {\r\n    setPinReady(code.length === 4);\r\n    return setPinReady(true);\r\n  }, [code]);\r\n\r\n  const handleOnBlur = () => setinputfocused(true);\r\n  const toCodeDigitInput = (_val, i) => {\r\n    const emptyChar = \" \";\r\n    const digit = code[i] || emptyChar;\r\n    const isCurrentDigit = i === code.length;\r\n    const isLastDigit = i === code.length - 1;\r\n    const isCodeFull = code.length === 4;\r\n\r\n    const isDigitFocused = isCurrentDigit || (isLastDigit && isCodeFull);\r\n\r\n    return (\r\n      <Text\r\n        style={{\r\n          backgroundColor: \"#4E4E4E\",\r\n          borderWidth: 1,\r\n          borderColor: \"#fff\",\r\n          width: 48,\r\n          height: 48,\r\n          borderRadius: 50,\r\n          textAlign: \"center\",\r\n          textAlignVertical: \"center\",\r\n          justifyContent: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: 20,\r\n          color: \"#ffffff\",\r\n        }}\r\n        key={i}\r\n      >\r\n        {digit}\r\n      </Text>\r\n    );\r\n  };\r\n  const handleOnPress = () => {\r\n    setinputfocused(true);\r\n    textInputRef?.current?.focus(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <ModalCenteredView>\r\n          <ModalView\r\n            style={{\r\n              backgroundColor:\"#4E4E4E\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n          \r\n           <Header \r\n              iconEnd={require(\"../../../../assets/cancel.png\")}\r\n            />\r\n            <Text\r\n              style={{\r\n                textAlign: \"left\",\r\n                fontSize: 25,\r\n              }}\r\n            >\r\n              {showOtpInput ? \"Input PIN\" : \"Authentication\"}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n              }}\r\n            >\r\n              {showOtpInput\r\n                ? \"Admin will send a 4 digit pin to be inputed below. \"\r\n                : \"Select authentication mode\"}\r\n            </Text>\r\n            <Section\r\n              style={{\r\n                width: 280,\r\n              }}\r\n            >\r\n              {showOtpInput && (\r\n                <PressableSection\r\n                  onPress={handleOnPress}\r\n                  style={{\r\n                    justifyContent: \"space-evenly\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  {NumPins.map(toCodeDigitInput)}\r\n                </PressableSection>\r\n              )}\r\n              <TextInput\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: 1,\r\n                  height: 1,\r\n                  opacity: 0,\r\n                }}\r\n                value={code}\r\n                onChangeText={setCode}\r\n                maxLength={5}\r\n                returnKeyType={\"done\"}\r\n                keyboardType={\"number-pad\"}\r\n                textContentType={\"oneTimeCode\"}\r\n                ref={textInputRef}\r\n                onBlur={handleOnBlur}\r\n              />\r\n              <Button\r\n               onPress={() => navigation.navigate('resetPassword')}\r\n                style={{\r\n                  marginBottom: 25,\r\n                  borderRadius: 50,\r\n                  paddingHorizontal: 25,\r\n                  backgroundColor: \"#4E4E4E\",\r\n                }}\r\n              >\r\n                <Text style={{ color: \"#fff\" }}>\r\n                  {showOtpInput ? \"Submit\" : \"Input Pin\"}\r\n                </Text>\r\n              </Button>\r\n              <Button\r\n                onPress={\r\n                  showOtpInput\r\n                    ? () => {\r\n                        setModalVisible(false);\r\n                        onOtpValidate();\r\n                      }\r\n                    : null\r\n                }\r\n                style={{\r\n                  borderRadius: 50,\r\n                  paddingHorizontal: 25,\r\n                }}\r\n              >\r\n                <Text style={{ color: \"#fff\" }}>\r\n                  {showOtpInput ? \"Resend PIN\" : \"Request PIN\"}\r\n                </Text>\r\n              </Button>\r\n            </Section>\r\n          </ModalView>\r\n        </ModalCenteredView>\r\n      </Modal>\r\n      <Pressable\r\n        onPress={() => {\r\n          setModalVisible(true)\r\n        }}\r\n        style={[buttonStyle]}\r\n      >\r\n        <Text\r\n          style={{\r\n            fontWeight: \"500\",\r\n            color: \"#000\",\r\n            fontSize: 15,\r\n          }}\r\n        >\r\n          Enter Pin\r\n        </Text>\r\n      </Pressable>\r\n    </>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}