{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { countries } from \"countries-list\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Selector from \"../../../../components/Selector\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default (function (_ref) {\n  var setValues = _ref.setValues,\n      _ref$namePlaceholder = _ref.namePlaceholder,\n      namePlaceholder = _ref$namePlaceholder === void 0 ? \"\" : _ref$namePlaceholder,\n      _ref$phonePlaceholder = _ref.phonePlaceholder,\n      phonePlaceholder = _ref$phonePlaceholder === void 0 ? \"\" : _ref$phonePlaceholder,\n      defaultNameVal = _ref.defaultNameVal,\n      defaultPhoneVal = _ref.defaultPhoneVal,\n      error = _ref.error,\n      setError = _ref.setError,\n      selectedCountryCode = _ref.selectedCountryCode,\n      setSelectedCountryCode = _ref.setSelectedCountryCode;\n  var codes = [];\n  useEffect(function () {\n    for (var code in countries) {\n      codes.push(\"+\" + countries[code].phone);\n    }\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: {\n        borderBottomColor: error.receiversName ? \"red\" : \"#C4C4C4\",\n        borderWidth: 1,\n        width: \"100%\"\n      },\n      children: _jsx(TextInput, {\n        onChangeText: function onChangeText(text) {\n          setError({});\n          setValues(function (states) {\n            return _objectSpread(_objectSpread({}, states), {}, {\n              dropOff: _objectSpread(_objectSpread({}, states == null ? void 0 : states.dropOff), {}, {\n                receiversName: text\n              })\n            });\n          });\n        },\n        defaultValue: defaultNameVal,\n        placeholder: namePlaceholder,\n        placeholderTextColor: \"white\",\n        style: {\n          borderRadius: 5,\n          marginVertical: 5,\n          color: \"#fff\"\n        }\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginTop: 20\n      },\n      children: [_jsx(Selector, {\n        buttonStyle: {\n          backgroundColor: \"transparent\",\n          width: \"25%\"\n        },\n        dropDownIconColor: \"#C4C4C4\",\n        data: codes,\n        setSelectedItem: setSelectedCountryCode,\n        buttonTextStyle: {\n          color: \"#C4C4C4\"\n        },\n        dropDownIconSize: 15,\n        defaultButtonText: \"+\" + countries.NG.phone\n      }), _jsx(View, {\n        style: {\n          borderBottomColor: error.receiversPhone ? \"red\" : \"#C4C4C4\",\n          borderWidth: 1,\n          width: 252\n        },\n        children: _jsx(TextInput, {\n          defaultValue: defaultPhoneVal,\n          onChangeText: function onChangeText(text) {\n            setError({});\n            setValues(function (states) {\n              return _objectSpread(_objectSpread({}, states), {}, {\n                dropOff: _objectSpread(_objectSpread({}, states.dropOff), {}, {\n                  receiversPhone: selectedCountryCode + text\n                })\n              });\n            });\n          },\n          placeholder: phonePlaceholder,\n          placeholderTextColor: \"white\",\n          style: {\n            borderRadius: 5,\n            marginVertical: 5,\n            color: \"#fff\"\n          },\n          keyboardType: \"number-pad\"\n        })\n      })]\n    })]\n  });\n});","map":{"version":3,"names":["countries","useEffect","useState","Selector","setValues","namePlaceholder","phonePlaceholder","defaultNameVal","defaultPhoneVal","error","setError","selectedCountryCode","setSelectedCountryCode","codes","code","push","phone","borderBottomColor","receiversName","borderWidth","width","text","states","dropOff","borderRadius","marginVertical","color","flexDirection","alignItems","marginTop","backgroundColor","NG","receiversPhone"],"sources":["C:/Users/karowrld/Yoris/src/features/logictics/components/InfoInput/index.js"],"sourcesContent":["import { countries } from \"countries-list\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Dimensions, TextInput, View } from \"react-native\";\r\nimport Selector from \"../../../../components/Selector\";\r\n\r\nexport default ({\r\n  setValues,\r\n  namePlaceholder = \"\",\r\n  phonePlaceholder = \"\",\r\n  defaultNameVal,\r\n  defaultPhoneVal,\r\n  error,\r\n  setError,\r\n  selectedCountryCode,\r\n  setSelectedCountryCode,\r\n}) => {\r\n  /*   const [selectedCountryCode, setSelectedCountryCode] = useState(\r\n    `+${countries.NG.phone}`\r\n  ); */\r\n  const codes = [];\r\n  useEffect(() => {\r\n    for (let code in countries) {\r\n      codes.push(`+${countries[code].phone}`);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          borderBottomColor: error.receiversName ? \"red\" : \"#C4C4C4\",\r\n          borderWidth: 1,\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <TextInput\r\n          onChangeText={(text) => {\r\n            setError({});\r\n\r\n            setValues((states) => ({\r\n              ...states,\r\n              dropOff: { ...states?.dropOff, receiversName: text },\r\n            }));\r\n          }}\r\n          defaultValue={defaultNameVal}\r\n          placeholder={namePlaceholder}\r\n          placeholderTextColor={\"white\"}\r\n          style={{\r\n            borderRadius: 5,\r\n            marginVertical: 5,\r\n            color: \"#fff\",\r\n          }}\r\n        />\r\n      </View>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Selector\r\n          buttonStyle={{\r\n            backgroundColor: \"transparent\",\r\n            width: \"25%\",\r\n          }}\r\n          dropDownIconColor={\"#C4C4C4\"}\r\n          data={codes}\r\n          setSelectedItem={setSelectedCountryCode}\r\n          buttonTextStyle={{\r\n            color: \"#C4C4C4\",\r\n          }}\r\n          dropDownIconSize={15}\r\n          defaultButtonText={`+${countries.NG.phone}`}\r\n        />\r\n\r\n        <View\r\n          style={{\r\n            borderBottomColor: error.receiversPhone ? \"red\" : \"#C4C4C4\",\r\n            borderWidth: 1,\r\n            width: 252,\r\n          }}\r\n        >\r\n          <TextInput\r\n            defaultValue={defaultPhoneVal}\r\n            onChangeText={(text) => {\r\n              setError({});\r\n              setValues((states) => ({\r\n                ...states,\r\n                dropOff: {\r\n                  ...states.dropOff,\r\n                  receiversPhone: selectedCountryCode + text,\r\n                },\r\n              }));\r\n            }}\r\n            placeholder={phonePlaceholder}\r\n            placeholderTextColor={\"white\"}\r\n            style={{\r\n              borderRadius: 5,\r\n              marginVertical: 5,\r\n              color: \"#fff\",\r\n            }}\r\n            keyboardType={\"number-pad\"}\r\n          />\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}