{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nimport { Calendar } from 'react-native-calendars';\nimport moment from 'moment';\nvar CUSTOM_WIDTH = Dimensions.get('window').width;\nimport { LocaleConfig } from 'react-native-calendars';\nimport { Select } from \"../componenets/calaendarStyle\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nLocaleConfig.locales['en'] = {\n  monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'Décember'],\n  monthNamesShort: ['Jan.', 'Feb.', 'Mar', 'Apr', 'May', 'Jun', 'Jul.', 'Aug', 'Sept.', 'Oct.', 'Nov.', 'Dec.'],\n  dayNames: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n  dayNamesShort: ['Mon.', 'Tue.', 'Wed.', 'Thur.', 'Fri.', 'Sat.', 'Sun.'],\n  today: 'Today\\'now'\n};\nLocaleConfig.locales['ru'] = {\n  monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n  monthNamesShort: ['Янв.', 'Феб.', 'Март', 'Апр', 'Май', 'Июнь', 'Июль.', 'Авг', 'Септ.', 'Окт.', 'Нов.', 'Дек.'],\n  dayNames: ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'],\n  dayNamesShort: ['Пн.', 'Вт.', 'Ср.', 'Чт.', 'Пт.', 'Сб.', 'Вс.'],\n  today: 'Сегодня\\'hui'\n};\nLocaleConfig.defaultLocale = 'en';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedDate: '',\n      markedDates: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getSelectedDayEvents = function getSelectedDayEvents(date) {\n        var markedDates = {};\n        markedDates[date] = {\n          selected: true,\n          color: '#00B0BF',\n          textColor: '#FFFFFF'\n        };\n        var serviceDate = moment(date);\n        serviceDate = serviceDate.format(\"DD/MM/YYYY\");\n\n        _this2.setState({\n          selectedDate: serviceDate,\n          markedDates: markedDates\n        });\n      };\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.topHeaderCalendar,\n          children: _jsxs(Text, {\n            style: styles.topHeaderCalendarText,\n            children: [\" \", this.state.selectedDate]\n          })\n        }), _jsx(Calendar, {\n          style: {\n            height: 257,\n            width: 294\n          },\n          theme: {\n            backgroundColor: '#000',\n            calendarBackground: '#000',\n            todayTextColor: '#57B9BB',\n            dayTextColor: '#FFF',\n            textDisabledColor: '#000',\n            monthTextColor: '#C3AD60',\n            arrowColor: '#C3AD60',\n            textDayFontWeight: '300',\n            textMonthFontWeight: 'bold',\n            textDayHeaderFontWeight: '500',\n            textDayFontSize: 16,\n            textMonthFontSize: 18,\n            selectedDayBackgroundColor: '#C3AD60',\n            selectedDayTextColor: 'white',\n            textDayHeaderFontSize: 8\n          },\n          minDate: '1996-05-10',\n          maxDate: '2030-05-30',\n          monthFormat: 'MMMM yyyy ',\n          markedDates: this.state.markedDates,\n          scrollEnabled: true,\n          horizontal: true,\n          showScrollIndicator: true,\n          disableMonthChange: true,\n          onDayPress: function onDayPress(day) {\n            getSelectedDayEvents(day.dateString);\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.selectbtn,\n          children: _jsx(Select, {\n            children: \"Select\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"#000\",\n    alignItems: \"center\"\n  },\n  topHeaderCalendar: {\n    height: 74,\n    width: '100%',\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    backgroundColor: '#32B2EC',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  topHeaderCalendarText: {\n    fontSize: 24,\n    color: '#ffffff'\n  },\n  selectbtn: {\n    height: 48,\n    width: 180,\n    borderRadius: 100,\n    backgroundColor: \"#C3AD60\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 100\n  }\n});","map":{"version":3,"names":["React","Constants","Calendar","moment","CUSTOM_WIDTH","Dimensions","get","width","LocaleConfig","Select","locales","monthNames","monthNamesShort","dayNames","dayNamesShort","today","defaultLocale","App","state","selectedDate","markedDates","getSelectedDayEvents","date","selected","color","textColor","serviceDate","format","setState","styles","container","topHeaderCalendar","topHeaderCalendarText","height","backgroundColor","calendarBackground","todayTextColor","dayTextColor","textDisabledColor","monthTextColor","arrowColor","textDayFontWeight","textMonthFontWeight","textDayHeaderFontWeight","textDayFontSize","textMonthFontSize","selectedDayBackgroundColor","selectedDayTextColor","textDayHeaderFontSize","day","dateString","selectbtn","Component","StyleSheet","create","flex","justifyContent","alignItems","borderTopLeftRadius","borderTopRightRadius","flexDirection","fontSize","borderRadius","marginTop"],"sources":["C:/Users/USER/Documents/Yoris/src/features/Fintech/calendarScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport {Dimensions,TouchableOpacity, Text, View, StyleSheet } from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport {Calendar} from 'react-native-calendars';\r\nimport moment  from 'moment';\r\nconst CUSTOM_WIDTH = Dimensions.get('window').width;\r\nimport {LocaleConfig} from 'react-native-calendars';\r\nimport {Select} from '../componenets/calaendarStyle'\r\n\r\nLocaleConfig.locales['en'] = {\r\n    monthNames: ['January','February','March','April','May','June','July','August','September','October','November','Décember'],\r\n    monthNamesShort: ['Jan.','Feb.','Mar','Apr','May','Jun','Jul.','Aug','Sept.','Oct.','Nov.','Dec.'],\r\n    dayNames: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n    dayNamesShort: ['Mon.','Tue.','Wed.','Thur.','Fri.','Sat.','Sun.'],\r\n    today: 'Today\\'now'\r\n};\r\n\r\nLocaleConfig.locales['ru'] = {\r\n    monthNames: ['Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    monthNamesShort: ['Янв.','Феб.','Март','Апр','Май','Июнь','Июль.','Авг','Септ.','Окт.','Нов.','Дек.'],\r\n    dayNames: ['Понедельник','Вторник','Среда','Четверг','Пятница','Суббота','Воскресенье'],\r\n    dayNamesShort: ['Пн.','Вт.','Ср.','Чт.','Пт.','Сб.','Вс.'],\r\n    today: 'Сегодня\\'hui'\r\n};\r\n\r\nLocaleConfig.defaultLocale = 'en';\r\n\r\nexport default class App extends React.Component {\r\n    state={\r\n      selectedDate: '',\r\n      markedDates: {}\r\n    }\r\n    \r\n  render() {\r\n    const getSelectedDayEvents = (date) => {\r\n        let markedDates = {};\r\n        markedDates[date] = { selected: true, color: '#00B0BF', textColor: '#FFFFFF' };\r\n        let serviceDate = moment(date);\r\n        serviceDate = serviceDate.format(\"DD/MM/YYYY\");\r\n        this.setState({\r\n            selectedDate: serviceDate,\r\n            markedDates: markedDates\r\n        });\r\n    };\r\n    return (\r\n      <View style={styles.container}>\r\n          \r\n          <View style={styles.topHeaderCalendar}>\r\n            <Text style={styles.topHeaderCalendarText}> {this.state.selectedDate}</Text>\r\n          </View>\r\n          <Calendar\r\n                style={{\r\n                  height: 257,\r\n                  width: 294,\r\n                }}\r\n                          theme={{\r\n                              backgroundColor: '#000',\r\n                              calendarBackground: '#000',\r\n                              todayTextColor: '#57B9BB',\r\n                              dayTextColor: '#FFF',\r\n                              textDisabledColor: '#000',\r\n                              monthTextColor: '#C3AD60',\r\n                              arrowColor: '#C3AD60',\r\n                              textDayFontWeight: '300',\r\n                              textMonthFontWeight: 'bold',\r\n                              textDayHeaderFontWeight: '500',\r\n                              textDayFontSize: 16,\r\n                              textMonthFontSize: 18,\r\n                              selectedDayBackgroundColor: '#C3AD60',\r\n                              selectedDayTextColor: 'white',    \r\n                              textDayHeaderFontSize: 8}}\r\n                          minDate={'1996-05-10'}\r\n                          maxDate={'2030-05-30'}\r\n                          monthFormat={'MMMM yyyy '}\r\n                          markedDates={this.state.markedDates}\r\n                          scrollEnabled={true}\r\n                          horizontal={true}\r\n                          showScrollIndicator={true}\r\n                          disableMonthChange={true}\r\n                          onDayPress={(day)=>{\r\n                              getSelectedDayEvents(day.dateString);\r\n                                }\r\n                            }\r\n                          />\r\n                  <TouchableOpacity style={styles.selectbtn}>\r\n                        <Select>Select</Select>\r\n                  </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#000\",\r\n    alignItems: \"center\"\r\n  },\r\n \r\n  topHeaderCalendar:{\r\n      height: 74,\r\n      width: '100%',\r\n      borderTopLeftRadius:10,\r\n      borderTopRightRadius:10,\r\n      backgroundColor: '#32B2EC',\r\n      flexDirection: 'row', \r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n  },\r\n  topHeaderCalendarText:{\r\n      fontSize: 24,\r\n      color: '#ffffff',\r\n  },\r\n  selectbtn: {\r\n    height: 48,\r\n    width: 180,\r\n    borderRadius: 100,\r\n    backgroundColor: \"#C3AD60\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 100\r\n},\r\n   \r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}