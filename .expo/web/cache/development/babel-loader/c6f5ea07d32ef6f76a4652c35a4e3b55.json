{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { DrawerContentScrollView, DrawerItem, DrawerItemList } from \"@react-navigation/drawer\";\nimport DrawerHeader from \"../../features/riders/components/DrawerHeader\";\nimport DrawerFooter from \"../../features/riders/components/DrawerFooter\";\nimport { FontAwesome } from \"../Icons\";\nimport { Constants } from \"../../../constants/db.mock\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar drawerContent = [{\n  title: \"Switch Profile\",\n  drawerIcon: function drawerIcon(props) {\n    return _jsx(FontAwesome, _objectSpread(_objectSpread({}, props), {}, {\n      name: \"exchange-alt\"\n    }));\n  }\n}, {\n  title: \"Switch to Light Mode\",\n  drawerIcon: function drawerIcon(props) {\n    return _jsx(FontAwesome, _objectSpread(_objectSpread({}, props), {}, {\n      name: \"sun\"\n    }));\n  }\n}, {\n  title: \"Share\",\n  drawerIcon: function drawerIcon(props) {\n    return _jsx(FontAwesome, _objectSpread(_objectSpread({}, props), {}, {\n      name: \"share-alt\"\n    }));\n  }\n}, {\n  title: \"Settings\",\n  drawerIcon: function drawerIcon(props) {\n    return _jsx(FontAwesome, _objectSpread(_objectSpread({}, props), {}, {\n      name: \"cog\"\n    }));\n  }\n}];\nexport default (function (props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    style: {\n      backgroundColor: Constants.theme.dark,\n      height: \"100%\"\n    },\n    children: [_jsx(DrawerHeader, {}), _jsx(DrawerItemList, _objectSpread({}, props)), drawerContent.map(function (screen) {\n      return _jsx(DrawerItem, {\n        label: screen.title,\n        icon: screen.drawerIcon,\n        activeTintColor: \"#fff\",\n        inactiveTintColor: \"#fff\",\n        style: {\n          marginVertical: 20\n        }\n      });\n    }), _jsx(DrawerFooter, {})]\n  }));\n});","map":{"version":3,"names":["DrawerContentScrollView","DrawerItem","DrawerItemList","DrawerHeader","DrawerFooter","FontAwesome","Constants","drawerContent","title","drawerIcon","props","backgroundColor","theme","dark","height","map","screen","marginVertical"],"sources":["C:/Users/karowrld/Yoris/src/components/CustomDrawer/index.js"],"sourcesContent":["import {\r\n  DrawerContentScrollView,\r\n  DrawerItem,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\nimport DrawerHeader from \"../../features/riders/components/DrawerHeader\";\r\nimport DrawerFooter from \"../../features/riders/components/DrawerFooter\";\r\nimport { FontAwesome } from \"../Icons\";\r\nimport { Constants } from \"../../../constants/db.mock\";\r\n\r\nconst drawerContent = [\r\n  {\r\n    title: \"Switch Profile\",\r\n    drawerIcon: (props) => <FontAwesome {...props} name=\"exchange-alt\" />,\r\n  },\r\n  {\r\n    title: \"Switch to Light Mode\",\r\n    drawerIcon: (props) => <FontAwesome {...props} name=\"sun\" />,\r\n  },\r\n  {\r\n    title: \"Share\",\r\n    drawerIcon: (props) => <FontAwesome {...props} name=\"share-alt\" />,\r\n  },\r\n\r\n  {\r\n    title: \"Settings\",\r\n    drawerIcon: (props) => <FontAwesome {...props} name=\"cog\" />,\r\n  },\r\n];\r\n\r\nexport default (props) => {\r\n  return (\r\n    <DrawerContentScrollView\r\n      {...props}\r\n      style={{\r\n        backgroundColor: Constants.theme.dark,\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <DrawerHeader />\r\n      <DrawerItemList {...props} />\r\n      {drawerContent.map((screen) => (\r\n        <DrawerItem\r\n          label={screen.title}\r\n          icon={screen.drawerIcon}\r\n          activeTintColor={\"#fff\"}\r\n          inactiveTintColor=\"#fff\"\r\n          style={{\r\n            marginVertical: 20,\r\n          }}\r\n        />\r\n      ))}\r\n      <DrawerFooter />\r\n    </DrawerContentScrollView>\r\n  );\r\n};\r\n"],"mappings":";;;;;;AAAA,SACEA,uBADF,EAEEC,UAFF,EAGEC,cAHF,QAIO,0BAJP;AAKA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,SAASC,WAAT;AACA,SAASC,SAAT;;;AAEA,IAAMC,aAAa,GAAG,CACpB;EACEC,KAAK,EAAE,gBADT;EAEEC,UAAU,EAAE,oBAACC,KAAD;IAAA,OAAW,KAAC,WAAD,kCAAiBA,KAAjB;MAAwB,IAAI,EAAC;IAA7B,GAAX;EAAA;AAFd,CADoB,EAKpB;EACEF,KAAK,EAAE,sBADT;EAEEC,UAAU,EAAE,oBAACC,KAAD;IAAA,OAAW,KAAC,WAAD,kCAAiBA,KAAjB;MAAwB,IAAI,EAAC;IAA7B,GAAX;EAAA;AAFd,CALoB,EASpB;EACEF,KAAK,EAAE,OADT;EAEEC,UAAU,EAAE,oBAACC,KAAD;IAAA,OAAW,KAAC,WAAD,kCAAiBA,KAAjB;MAAwB,IAAI,EAAC;IAA7B,GAAX;EAAA;AAFd,CAToB,EAcpB;EACEF,KAAK,EAAE,UADT;EAEEC,UAAU,EAAE,oBAACC,KAAD;IAAA,OAAW,KAAC,WAAD,kCAAiBA,KAAjB;MAAwB,IAAI,EAAC;IAA7B,GAAX;EAAA;AAFd,CAdoB,CAAtB;AAoBA,gBAAe,UAACA,KAAD,EAAW;EACxB,OACE,MAAC,uBAAD,kCACMA,KADN;IAEE,KAAK,EAAE;MACLC,eAAe,EAAEL,SAAS,CAACM,KAAV,CAAgBC,IAD5B;MAELC,MAAM,EAAE;IAFH,CAFT;IAAA,WAOE,KAAC,YAAD,KAPF,EAQE,KAAC,cAAD,oBAAoBJ,KAApB,EARF,EASGH,aAAa,CAACQ,GAAd,CAAkB,UAACC,MAAD;MAAA,OACjB,KAAC,UAAD;QACE,KAAK,EAAEA,MAAM,CAACR,KADhB;QAEE,IAAI,EAAEQ,MAAM,CAACP,UAFf;QAGE,eAAe,EAAE,MAHnB;QAIE,iBAAiB,EAAC,MAJpB;QAKE,KAAK,EAAE;UACLQ,cAAc,EAAE;QADX;MALT,EADiB;IAAA,CAAlB,CATH,EAoBE,KAAC,YAAD,KApBF;EAAA,GADF;AAwBD,CAzBD"},"metadata":{},"sourceType":"module"}