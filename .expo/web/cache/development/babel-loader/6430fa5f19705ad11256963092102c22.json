{
  "ast": null,
  "code": "import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styled from \"styled-components/native\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport { colors } from \"../../../infrastructure/theme/colors\";\nimport { Text } from \"../../../components/typography/text.component\";\nexport var AccountBackground = styled.ImageBackground.attrs({\n  source: require(\"../../../../assets/Yoris.png\")\n})(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  align-items: center;\\n  justify-content: center;\\n\"])));\nexport var AccountCover = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(255, 255, 255, 0.3);\\n\"])));\nexport var AccountContainer = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  background-color: rgba(255, 255, 255, 0.7);\\n  padding: \", \";\\n  margin-top: \", \";\\n\"])), function (props) {\n  return props.theme.space[4];\n}, function (props) {\n  return props.theme.space[2];\n});\nexport var AuthButton = styled(Button).attrs({\n  color: colors.brand.primary\n})(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  padding: \", \";\\n\"])), function (props) {\n  return props.theme.space[2];\n});\nexport var AuthInput = styled(TextInput)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  width: 300px;\\n\"])));\nexport var Title = styled(Text)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  font-size: 30px;\\n\"])));\nexport var ErrorContainer = styled.View(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  max-width: 300px;\\n  align-items: center;\\n  align-self: center;\\n  margin-top: \", \";\\n  margin-bottom: \", \";\\n\"])), function (props) {\n  return props.theme.space[2];\n}, function (props) {\n  return props.theme.space[2];\n});\nexport var AnimationWrapper = styled.View(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: 40%;\\n  position: absolute;\\n  top: 30px;\\n  padding: \", \";\\n\"])), function (props) {\n  return props.theme.space[2];\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    color: '#ffffff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  img: {\n    width: 150,\n    height: 150\n  },\n  inputext: {\n    height: 50,\n    fontSize: 20,\n    color: \"white\"\n  },\n  inputView: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 13,\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: '#4E4E4E'\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"Constants.theme.primary\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 13,\n    marginBottom: 15\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  forget: {\n    backgroundColor: 'Constants.theme.primary',\n    color: '#ffffff'\n  }\n});",
  "map": {
    "version": 3,
    "sources": [
      "C:/Users/Admin/logistic/src/features/account/components/account.styles.js"
    ],
    "names": [
      "React",
      "styled",
      "Button",
      "TextInput",
      "colors",
      "Text",
      "AccountBackground",
      "ImageBackground",
      "attrs",
      "source",
      "require",
      "AccountCover",
      "View",
      "AccountContainer",
      "props",
      "theme",
      "space",
      "AuthButton",
      "color",
      "brand",
      "primary",
      "AuthInput",
      "Title",
      "ErrorContainer",
      "AnimationWrapper",
      "styles",
      "StyleSheet",
      "create",
      "container",
      "flex",
      "backgroundColor",
      "alignItems",
      "justifyContent",
      "img",
      "width",
      "height",
      "inputext",
      "fontSize",
      "inputView",
      "borderRadius",
      "marginBottom",
      "padding",
      "loginBtn",
      "marginTop",
      "loginText",
      "fontWeight",
      "forget"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react'\r\nimport {\r\n\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n  Image\r\n} from 'react-native';\r\nimport styled from \"styled-components/native\";\r\nimport { Button, TextInput } from \"react-native-paper\";\r\nimport { colors } from \"../../../infrastructure/theme/colors\";\r\nimport { Text } from \"../../../components/typography/text.component\";\r\n\r\n\r\n\r\n\r\nexport const AccountBackground = styled.ImageBackground.attrs({\r\n  source: require(\"../../../../assets/Yoris.png\"),\r\n})`\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const AccountCover = styled.View`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const AccountContainer = styled.View`\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  padding: ${(props) => props.theme.space[4]};\r\n  margin-top: ${(props) => props.theme.space[2]};\r\n`;\r\n\r\nexport const AuthButton = styled(Button).attrs({\r\n  color: colors.brand.primary,\r\n})`\r\n  padding: ${(props) => props.theme.space[2]};\r\n`;\r\n\r\nexport const AuthInput = styled(TextInput)`\r\n  width: 300px;\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  font-size: 30px;\r\n`;\r\n\r\nexport const ErrorContainer = styled.View`\r\n  max-width: 300px;\r\n  align-items: center;\r\n  align-self: center;\r\n  margin-top: ${(props) => props.theme.space[2]};\r\n  margin-bottom: ${(props) => props.theme.space[2]};\r\n`;\r\n\r\nexport const AnimationWrapper = styled.View`\r\n  width: 100%;\r\n  height: 40%;\r\n  position: absolute;\r\n  top: 30px;\r\n  padding: ${(props) => props.theme.space[2]};\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default function loginscreen() {\r\n//   return (\r\n//     <View style={styles.container}>\r\n\r\n\r\n//       <View>\r\n//         <Image style={styles.img} source={require('../../../../assets/YorisIcon1.png')} />\r\n//       </View>\r\n\r\n\r\n//       <View style={styles.inputView}>\r\n//         <TextInput style={styles.inputText}\r\n//           placeholder='Email'\r\n//           placeholderTextColor={'#ffff'} />\r\n//       </View>\r\n\r\n//       <View style={styles.inputView}>\r\n//         <TextInput style={styles.inputText}\r\n//           placeholder='Password'\r\n//           placeholderTextColor={'#ffff'} />\r\n//       </View>\r\n\r\n//       <TouchableOpacity>\r\n//         <Text style={styles.forget}>Forgot Password?</Text>\r\n//       </TouchableOpacity>\r\n\r\n//       <TouchableOpacity style={styles.loginBtn}>\r\n//         <Text style={styles.loginText}>Login </Text>\r\n//       </TouchableOpacity>\r\n\r\n\r\n//       <TouchableOpacity style={styles.loginBtn}>\r\n//         <Text style={styles.loginText}>Signup</Text>\r\n//       </TouchableOpacity>\r\n\r\n//     </View>\r\n\r\n//   )\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#000000',\r\n    color: '#ffffff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n  },\r\n\r\n  img: {\r\n    width: 150,\r\n    height: 150\r\n  },\r\n  inputext: {\r\n    height: 50,\r\n    fontSize: 20,\r\n    color: \"white\",\r\n  },\r\n  inputView: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    marginBottom: 13,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    backgroundColor: '#4E4E4E',\r\n\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    backgroundColor: \"Constants.theme.primary\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 13,\r\n    marginBottom: 15,\r\n  },\r\n\r\n  loginText: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\"\r\n  },\r\n\r\n  forget: {\r\n    backgroundColor: 'Constants.theme.primary',\r\n    color: '#ffffff',\r\n\r\n\r\n  },\r\n\r\n\r\n});\r\n// export const AnimationWrapper = styled.View`\r\n//   width: 100%;\r\n//   height: 40%;\r\n//   position: absolute;\r\n//   top: 30px;\r\n//   padding: ${(props) => props.theme.space[2]};\r\n// `;\r\n\r\n\r\n// okasy so any values that we are not giong to use immdiately we have to store this value\r\n// so we not just naming variables because we have to but because we have to store used values so that would not be\r\n// lost\r\n// so we have to name the variable in memory to hold this data \r\n\r\n\r\n\r\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
