{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Header from \"../../../components/Header\";\nimport { Layout, LayoutScrollView, Text } from \"../../../components/Layout\";\nimport OneOff from \"../components/OneOff\";\nimport Multiple from \"../components/Multiple\";\nimport { Button } from \"../../../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Logisticscreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isMultiple = _useState2[0],\n      setIsMultiple = _useState2[1];\n\n  return _jsxs(LayoutScrollView, {\n    styles: {\n      paddingHorizontal: 50\n    },\n    children: [_jsx(Header, {\n      iconLeft: require(\"../../../../assets/delivery.png\"),\n      iconRight: require(\"../../../../assets/history.png\"),\n      onRightIconPress: function onRightIconPress() {\n        return navigation.navigate(\"orderHistory\");\n      },\n      containerStyle: {\n        paddingHorizontal: 20\n      }\n    }), _jsxs(View, {\n      style: [styles.row, {\n        justifyContent: \"space-around\",\n        paddingHorizontal: 50,\n        marginBottom: 20\n      }],\n      children: [_jsx(Pressable, {\n        style: {},\n        onPress: function onPress() {\n          return setIsMultiple(false);\n        },\n        children: _jsx(Text, {\n          style: [styles.screenToggleBtn, {\n            color: isMultiple ? \"#4E4E4E\" : \"#fff\"\n          }],\n          children: \"One Off\"\n        })\n      }), _jsx(View, {\n        style: {\n          borderColor: \"#fff\",\n          borderWidth: 1\n        }\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          return setIsMultiple(true);\n        },\n        children: _jsx(Text, {\n          style: [styles.screenToggleBtn, {\n            color: !isMultiple ? \"#4E4E4E\" : \"#fff\"\n          }],\n          children: \"Multiple\"\n        })\n      })]\n    }), _jsx(View, {\n      style: [styles.container],\n      children: !isMultiple ? _jsx(OneOff, {}) : _jsx(Multiple, {})\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  iconContainer: {\n    alignItems: \"flex-end\"\n  },\n  icon: {\n    marginRight: 10,\n    width: 30,\n    height: 30\n  },\n  iconText: {\n    color: \"#fff\",\n    fontSize: 17,\n    fontWeight: \"bold\"\n  },\n  screenToggleBtn: {\n    fontSize: 16,\n    fontWeight: \"300\"\n  }\n});","map":{"version":3,"names":["React","useCallback","useState","useNavigation","Header","Layout","LayoutScrollView","Text","OneOff","Multiple","Button","Logisticscreen","navigation","isMultiple","setIsMultiple","paddingHorizontal","require","navigate","styles","row","justifyContent","marginBottom","screenToggleBtn","color","borderColor","borderWidth","container","StyleSheet","create","flexDirection","iconContainer","alignItems","icon","marginRight","width","height","iconText","fontSize","fontWeight"],"sources":["C:/Users/karowrld/Yoris/src/features/logictics/screens/logisticscreen.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { View, Pressable, StyleSheet } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Header from \"../../../components/Header\";\r\nimport { Layout, LayoutScrollView, Text } from \"../../../components/Layout\";\r\nimport OneOff from \"../components/OneOff\";\r\nimport Multiple from \"../components/Multiple\";\r\nimport { Button } from \"../../../components/Button\";\r\n\r\nexport default function Logisticscreen() {\r\n  const navigation = useNavigation();\r\n  const [isMultiple, setIsMultiple] = useState(false);\r\n\r\n  return (\r\n    <LayoutScrollView\r\n      styles={{\r\n        paddingHorizontal: 50,\r\n      }}\r\n    >\r\n      <Header\r\n        iconLeft={require(\"../../../../assets/delivery.png\")}\r\n        iconRight={require(\"../../../../assets/history.png\")}\r\n        onRightIconPress={() => navigation.navigate(\"orderHistory\")}\r\n        containerStyle={{\r\n          paddingHorizontal: 20,\r\n        }}\r\n      />\r\n\r\n      <View\r\n        style={[\r\n          styles.row,\r\n          {\r\n            justifyContent: \"space-around\",\r\n            paddingHorizontal: 50,\r\n            marginBottom: 20,\r\n          },\r\n        ]}\r\n      >\r\n        <Pressable style={{}} onPress={() => setIsMultiple(false)}>\r\n          <Text\r\n            style={[\r\n              styles.screenToggleBtn,\r\n              { color: isMultiple ? \"#4E4E4E\" : \"#fff\" },\r\n            ]}\r\n          >\r\n            One Off\r\n          </Text>\r\n        </Pressable>\r\n        <View style={{ borderColor: \"#fff\", borderWidth: 1 }} />\r\n        <Pressable onPress={() => setIsMultiple(true)}>\r\n          <Text\r\n            style={[\r\n              styles.screenToggleBtn,\r\n              { color: !isMultiple ? \"#4E4E4E\" : \"#fff\" },\r\n            ]}\r\n          >\r\n            Multiple\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n\r\n      {/* Container */}\r\n      <View style={[styles.container]}>\r\n        {!isMultiple ? <OneOff /> : <Multiple />}\r\n      </View>\r\n    </LayoutScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n  iconContainer: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n\r\n  icon: {\r\n    marginRight: 10,\r\n    width: 30,\r\n    height: 30,\r\n  },\r\n  iconText: {\r\n    color: \"#fff\",\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n  },\r\n  screenToggleBtn: {\r\n    fontSize: 16,\r\n    fontWeight: \"300\",\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,MAAP;AACA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,IAAnC;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,SAASC,MAAT;;;AAEA,eAAe,SAASC,cAAT,GAA0B;EACvC,IAAMC,UAAU,GAAGT,aAAa,EAAhC;;EACA,gBAAoCD,QAAQ,CAAC,KAAD,CAA5C;EAAA;EAAA,IAAOW,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,OACE,MAAC,gBAAD;IACE,MAAM,EAAE;MACNC,iBAAiB,EAAE;IADb,CADV;IAAA,WAKE,KAAC,MAAD;MACE,QAAQ,EAAEC,OAAO,mCADnB;MAEE,SAAS,EAAEA,OAAO,kCAFpB;MAGE,gBAAgB,EAAE;QAAA,OAAMJ,UAAU,CAACK,QAAX,CAAoB,cAApB,CAAN;MAAA,CAHpB;MAIE,cAAc,EAAE;QACdF,iBAAiB,EAAE;MADL;IAJlB,EALF,EAcE,MAAC,IAAD;MACE,KAAK,EAAE,CACLG,MAAM,CAACC,GADF,EAEL;QACEC,cAAc,EAAE,cADlB;QAEEL,iBAAiB,EAAE,EAFrB;QAGEM,YAAY,EAAE;MAHhB,CAFK,CADT;MAAA,WAUE,KAAC,SAAD;QAAW,KAAK,EAAE,EAAlB;QAAsB,OAAO,EAAE;UAAA,OAAMP,aAAa,CAAC,KAAD,CAAnB;QAAA,CAA/B;QAAA,UACE,KAAC,IAAD;UACE,KAAK,EAAE,CACLI,MAAM,CAACI,eADF,EAEL;YAAEC,KAAK,EAAEV,UAAU,GAAG,SAAH,GAAe;UAAlC,CAFK,CADT;UAAA;QAAA;MADF,EAVF,EAoBE,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEW,WAAW,EAAE,MAAf;UAAuBC,WAAW,EAAE;QAApC;MAAb,EApBF,EAqBE,KAAC,SAAD;QAAW,OAAO,EAAE;UAAA,OAAMX,aAAa,CAAC,IAAD,CAAnB;QAAA,CAApB;QAAA,UACE,KAAC,IAAD;UACE,KAAK,EAAE,CACLI,MAAM,CAACI,eADF,EAEL;YAAEC,KAAK,EAAE,CAACV,UAAD,GAAc,SAAd,GAA0B;UAAnC,CAFK,CADT;UAAA;QAAA;MADF,EArBF;IAAA,EAdF,EAgDE,KAAC,IAAD;MAAM,KAAK,EAAE,CAACK,MAAM,CAACQ,SAAR,CAAb;MAAA,UACG,CAACb,UAAD,GAAc,KAAC,MAAD,KAAd,GAA2B,KAAC,QAAD;IAD9B,EAhDF;EAAA,EADF;AAsDD;AAED,IAAMK,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTX,iBAAiB,EAAE;EADV,CADoB;EAK/BI,GAAG,EAAE;IACHU,aAAa,EAAE;EADZ,CAL0B;EAQ/BC,aAAa,EAAE;IACbC,UAAU,EAAE;EADC,CARgB;EAY/BC,IAAI,EAAE;IACJC,WAAW,EAAE,EADT;IAEJC,KAAK,EAAE,EAFH;IAGJC,MAAM,EAAE;EAHJ,CAZyB;EAiB/BC,QAAQ,EAAE;IACRb,KAAK,EAAE,MADC;IAERc,QAAQ,EAAE,EAFF;IAGRC,UAAU,EAAE;EAHJ,CAjBqB;EAsB/BhB,eAAe,EAAE;IACfe,QAAQ,EAAE,EADK;IAEfC,UAAU,EAAE;EAFG;AAtBc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}