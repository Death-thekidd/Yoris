{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useState } from \"react\";\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport { Constants } from \"../../../constants/db.mock\";\nimport { FontAwesome } from \"../Icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Selector(_ref) {\n  var data = _ref.data,\n      defaultButtonText = _ref.defaultButtonText,\n      buttonStyle = _ref.buttonStyle,\n      buttonTextStyle = _ref.buttonTextStyle,\n      setSelectedItem = _ref.setSelectedItem,\n      _ref$dropdownIconPosi = _ref.dropdownIconPosition,\n      dropdownIconPosition = _ref$dropdownIconPosi === void 0 ? \"left\" : _ref$dropdownIconPosi,\n      dropDownIconColor = _ref.dropDownIconColor,\n      _ref$dropDownIconSize = _ref.dropDownIconSize,\n      dropDownIconSize = _ref$dropDownIconSize === void 0 ? 20 : _ref$dropDownIconSize,\n      defaultValue = _ref.defaultValue;\n  var onSelect = useCallback(function (item, i) {\n    return setSelectedItem(item);\n  }, [setSelectedItem]);\n  return _jsx(SelectDropdown, {\n    data: data,\n    onSelect: onSelect,\n    defaultButtonText: defaultButtonText,\n    buttonStyle: _objectSpread({\n      borderRadius: 6,\n      backgroundColor: Constants.theme.primary\n    }, buttonStyle),\n    buttonTextStyle: _objectSpread({\n      fontSize: 13,\n      fontWeight: \"500\"\n    }, buttonTextStyle),\n    defaultValue: defaultValue,\n    renderDropdownIcon: function renderDropdownIcon() {\n      return _jsx(FontAwesome, {\n        name: \"caret-down\",\n        size: dropDownIconSize,\n        color: dropDownIconColor\n      });\n    },\n    dropdownStyle: {\n      backgroundColor: Constants.theme.primary\n    },\n    dropdownIconPosition: dropdownIconPosition\n  });\n}","map":{"version":3,"names":["React","useCallback","useState","SelectDropdown","Constants","FontAwesome","Selector","data","defaultButtonText","buttonStyle","buttonTextStyle","setSelectedItem","dropdownIconPosition","dropDownIconColor","dropDownIconSize","defaultValue","onSelect","item","i","borderRadius","backgroundColor","theme","primary","fontSize","fontWeight"],"sources":["C:/Users/USER/Desktop/Yoris/src/components/Selector/index.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\n\r\nimport SelectDropdown from \"react-native-select-dropdown\";\r\nimport { Constants } from \"../../../constants/db.mock\";\r\nimport { FontAwesome } from \"../Icons\";\r\n\r\n/**\r\n * Selector\r\n * @props Data Array\r\n * @props defaultButtonText\r\n * @props buttonTextStyle\r\n * @props setSelectedItem\r\n */\r\nexport default function Selector({\r\n  data,\r\n  defaultButtonText,\r\n  buttonStyle,\r\n  buttonTextStyle,\r\n  setSelectedItem,\r\n  dropdownIconPosition = \"left\",\r\n  dropDownIconColor,\r\n  dropDownIconSize = 20,\r\n  defaultValue,\r\n}) {\r\n  const onSelect = useCallback(\r\n    (item, i) => setSelectedItem(item),\r\n    [setSelectedItem]\r\n  );\r\n  return (\r\n    <SelectDropdown\r\n      data={data}\r\n      onSelect={onSelect}\r\n      defaultButtonText={defaultButtonText}\r\n      buttonStyle={{\r\n        borderRadius: 6,\r\n        backgroundColor: Constants.theme.primary,\r\n        ...buttonStyle,\r\n      }}\r\n      buttonTextStyle={{\r\n        fontSize: 13,\r\n        fontWeight: \"500\",\r\n        ...buttonTextStyle,\r\n      }}\r\n      defaultValue={defaultValue}\r\n      renderDropdownIcon={() => (\r\n        <FontAwesome\r\n          name={\"caret-down\"}\r\n          size={dropDownIconSize}\r\n          color={dropDownIconColor}\r\n        />\r\n      )}\r\n      dropdownStyle={{\r\n        backgroundColor: Constants.theme.primary,\r\n      }}\r\n      dropdownIconPosition={dropdownIconPosition}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,SAAT;AACA,SAASC,WAAT;;AASA,eAAe,SAASC,QAAT,OAUZ;EAAA,IATDC,IASC,QATDA,IASC;EAAA,IARDC,iBAQC,QARDA,iBAQC;EAAA,IAPDC,WAOC,QAPDA,WAOC;EAAA,IANDC,eAMC,QANDA,eAMC;EAAA,IALDC,eAKC,QALDA,eAKC;EAAA,iCAJDC,oBAIC;EAAA,IAJDA,oBAIC,sCAJsB,MAItB;EAAA,IAHDC,iBAGC,QAHDA,iBAGC;EAAA,iCAFDC,gBAEC;EAAA,IAFDA,gBAEC,sCAFkB,EAElB;EAAA,IADDC,YACC,QADDA,YACC;EACD,IAAMC,QAAQ,GAAGf,WAAW,CAC1B,UAACgB,IAAD,EAAOC,CAAP;IAAA,OAAaP,eAAe,CAACM,IAAD,CAA5B;EAAA,CAD0B,EAE1B,CAACN,eAAD,CAF0B,CAA5B;EAIA,OACE,KAAC,cAAD;IACE,IAAI,EAAEJ,IADR;IAEE,QAAQ,EAAES,QAFZ;IAGE,iBAAiB,EAAER,iBAHrB;IAIE,WAAW;MACTW,YAAY,EAAE,CADL;MAETC,eAAe,EAAEhB,SAAS,CAACiB,KAAV,CAAgBC;IAFxB,GAGNb,WAHM,CAJb;IASE,eAAe;MACbc,QAAQ,EAAE,EADG;MAEbC,UAAU,EAAE;IAFC,GAGVd,eAHU,CATjB;IAcE,YAAY,EAAEK,YAdhB;IAeE,kBAAkB,EAAE;MAAA,OAClB,KAAC,WAAD;QACE,IAAI,EAAE,YADR;QAEE,IAAI,EAAED,gBAFR;QAGE,KAAK,EAAED;MAHT,EADkB;IAAA,CAftB;IAsBE,aAAa,EAAE;MACbO,eAAe,EAAEhB,SAAS,CAACiB,KAAV,CAAgBC;IADpB,CAtBjB;IAyBE,oBAAoB,EAAEV;EAzBxB,EADF;AA6BD"},"metadata":{},"sourceType":"module"}