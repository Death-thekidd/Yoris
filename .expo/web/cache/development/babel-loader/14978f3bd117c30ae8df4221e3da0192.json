{"ast":null,"code":"import { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Constants } from \"../../../constants/db.mock\";\nimport Header from \"../../components/Header\";\nimport { FontAwesome } from \"../../components/Icons\";\nimport Storesscreen from \"../../features/Stores/Stores.screen\";\nimport AccountNavigator from \"./account.navigation\";\nimport LogisticNavigator from \"./Logistic\";\nimport SocialNavigator from \"./social.navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tabs = createMaterialTopTabNavigator();\n\nvar Tab = function Tab() {\n  var navigation = useNavigation();\n  var theme = Constants.theme;\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      containerStyle: {\n        padding: 10,\n        marginBottom: 0,\n        marginTop: 0,\n        backgroundColor: theme.dark\n      },\n      IconRightComponent: function IconRightComponent() {\n        return _jsx(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            width: 100\n          },\n          children: _jsx(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate(\"profile\", {\n                isUser: false,\n                isRider: true\n              });\n            },\n            children: _jsx(FontAwesome, {\n              color: Constants.theme.primary,\n              name: \"user\",\n              size: 20\n            })\n          })\n        });\n      }\n    }), _jsxs(Tabs.Navigator, {\n      screenOptions: {\n        activeTintColor: \"#50d3a7\",\n        tabBarActiveTintColor: Constants.theme.primary,\n        tabBarInactiveTintColor: Constants.theme.primary,\n        inactiveTintColor: \"white\",\n        tabBarPressColor: \"transparent\",\n        tabBarShowIcon: true,\n        tabBarIndicatorStyle: {\n          backgroundColor: \"#9A8340\"\n        },\n        tabBarStyle: {\n          elevation: 10,\n          backgroundColor: \"#0B090A\",\n          borderRadius: 1\n        }\n      },\n      children: [_jsx(Tabs.Screen, {\n        name: \"Stores\",\n        component: Storesscreen\n      }), _jsx(Tabs.Screen, {\n        name: \"Account\",\n        component: AccountNavigator\n      }), _jsx(Tabs.Screen, {\n        name: \"Logistics\",\n        component: LogisticNavigator\n      }), _jsx(Tabs.Screen, {\n        name: \"SocialMedia\",\n        component: SocialNavigator\n      })]\n    })]\n  });\n};\n\nexport default Tab;","map":{"version":3,"names":["createMaterialTopTabNavigator","useNavigation","Constants","Header","FontAwesome","Storesscreen","AccountNavigator","LogisticNavigator","SocialNavigator","Tabs","Tab","navigation","theme","padding","marginBottom","marginTop","backgroundColor","dark","flexDirection","justifyContent","alignItems","width","navigate","isUser","isRider","primary","activeTintColor","tabBarActiveTintColor","tabBarInactiveTintColor","inactiveTintColor","tabBarPressColor","tabBarShowIcon","tabBarIndicatorStyle","tabBarStyle","elevation","borderRadius"],"sources":["C:/Users/karowrld/Yoris/src/infrastructure/navigation/Tab.js"],"sourcesContent":["import { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Pressable, View } from \"react-native\";\r\nimport { Constants } from \"../../../constants/db.mock\";\r\nimport Header from \"../../components/Header\";\r\nimport { FontAwesome } from \"../../components/Icons\";\r\nimport Storesscreen from \"../../features/Stores/Stores.screen\";\r\nimport AccountNavigator from \"./account.navigation\";\r\nimport LogisticNavigator from \"./Logistic\";\r\nimport SocialNavigator from \"./social.navigation\";\r\n\r\n/// just the way we use the stack navigation\r\nconst Tabs = createMaterialTopTabNavigator();\r\n\r\nconst Tab = () => {\r\n  const navigation = useNavigation();\r\n  const theme = Constants.theme;\r\n  return (\r\n    <>\r\n      <Header\r\n        containerStyle={{\r\n          padding: 10,\r\n          marginBottom: 0,\r\n          marginTop: 0,\r\n          backgroundColor: theme.dark,\r\n        }}\r\n        IconRightComponent={() => (\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n              alignItems: \"center\",\r\n              width: 100,\r\n            }}\r\n          >\r\n            <Pressable\r\n              onPress={() =>\r\n                navigation.navigate(\"profile\", {\r\n                  /* data should be dynamic */ isUser: false,\r\n                  isRider: true,\r\n                })\r\n              }\r\n            >\r\n              <FontAwesome\r\n                color={Constants.theme.primary}\r\n                name={\"user\"}\r\n                size={20}\r\n              />\r\n            </Pressable>\r\n          </View>\r\n        )}\r\n      />\r\n\r\n      <Tabs.Navigator\r\n        screenOptions={{\r\n          activeTintColor: \"#50d3a7\",\r\n          tabBarActiveTintColor: Constants.theme.primary,\r\n          tabBarInactiveTintColor: Constants.theme.primary,\r\n          inactiveTintColor: \"white\",\r\n          tabBarPressColor: \"transparent\",\r\n          tabBarShowIcon: true,\r\n          tabBarIndicatorStyle: {\r\n            backgroundColor: \"#9A8340\",\r\n          },\r\n\r\n          tabBarStyle: {\r\n            elevation: 10,\r\n            backgroundColor: \"#0B090A\",\r\n            borderRadius: 1,\r\n          },\r\n        }}\r\n      >\r\n        <Tabs.Screen name=\"Stores\" component={Storesscreen} />\r\n        <Tabs.Screen name=\"Account\" component={AccountNavigator} />\r\n        <Tabs.Screen name=\"Logistics\" component={LogisticNavigator} />\r\n        <Tabs.Screen name=\"SocialMedia\" component={SocialNavigator} />\r\n      </Tabs.Navigator>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n"],"mappings":"AAAA,SAASA,6BAAT,QAA8C,qCAA9C;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,SAASC,SAAT;AACA,OAAOC,MAAP;AACA,SAASC,WAAT;AACA,OAAOC,YAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,eAAP;;;;AAGA,IAAMC,IAAI,GAAGT,6BAA6B,EAA1C;;AAEA,IAAMU,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,IAAMC,UAAU,GAAGV,aAAa,EAAhC;EACA,IAAMW,KAAK,GAAGV,SAAS,CAACU,KAAxB;EACA,OACE;IAAA,WACE,KAAC,MAAD;MACE,cAAc,EAAE;QACdC,OAAO,EAAE,EADK;QAEdC,YAAY,EAAE,CAFA;QAGdC,SAAS,EAAE,CAHG;QAIdC,eAAe,EAAEJ,KAAK,CAACK;MAJT,CADlB;MAOE,kBAAkB,EAAE;QAAA,OAClB,KAAC,IAAD;UACE,KAAK,EAAE;YACLC,aAAa,EAAE,KADV;YAELC,cAAc,EAAE,UAFX;YAGLC,UAAU,EAAE,QAHP;YAILC,KAAK,EAAE;UAJF,CADT;UAAA,UAQE,KAAC,SAAD;YACE,OAAO,EAAE;cAAA,OACPV,UAAU,CAACW,QAAX,CAAoB,SAApB,EAA+B;gBACAC,MAAM,EAAE,KADR;gBAE7BC,OAAO,EAAE;cAFoB,CAA/B,CADO;YAAA,CADX;YAAA,UAQE,KAAC,WAAD;cACE,KAAK,EAAEtB,SAAS,CAACU,KAAV,CAAgBa,OADzB;cAEE,IAAI,EAAE,MAFR;cAGE,IAAI,EAAE;YAHR;UARF;QARF,EADkB;MAAA;IAPtB,EADF,EAmCE,MAAC,IAAD,CAAM,SAAN;MACE,aAAa,EAAE;QACbC,eAAe,EAAE,SADJ;QAEbC,qBAAqB,EAAEzB,SAAS,CAACU,KAAV,CAAgBa,OAF1B;QAGbG,uBAAuB,EAAE1B,SAAS,CAACU,KAAV,CAAgBa,OAH5B;QAIbI,iBAAiB,EAAE,OAJN;QAKbC,gBAAgB,EAAE,aALL;QAMbC,cAAc,EAAE,IANH;QAObC,oBAAoB,EAAE;UACpBhB,eAAe,EAAE;QADG,CAPT;QAWbiB,WAAW,EAAE;UACXC,SAAS,EAAE,EADA;UAEXlB,eAAe,EAAE,SAFN;UAGXmB,YAAY,EAAE;QAHH;MAXA,CADjB;MAAA,WAmBE,KAAC,IAAD,CAAM,MAAN;QAAa,IAAI,EAAC,QAAlB;QAA2B,SAAS,EAAE9B;MAAtC,EAnBF,EAoBE,KAAC,IAAD,CAAM,MAAN;QAAa,IAAI,EAAC,SAAlB;QAA4B,SAAS,EAAEC;MAAvC,EApBF,EAqBE,KAAC,IAAD,CAAM,MAAN;QAAa,IAAI,EAAC,WAAlB;QAA8B,SAAS,EAAEC;MAAzC,EArBF,EAsBE,KAAC,IAAD,CAAM,MAAN;QAAa,IAAI,EAAC,aAAlB;QAAgC,SAAS,EAAEC;MAA3C,EAtBF;IAAA,EAnCF;EAAA,EADF;AA8DD,CAjED;;AAmEA,eAAeE,GAAf"},"metadata":{},"sourceType":"module"}