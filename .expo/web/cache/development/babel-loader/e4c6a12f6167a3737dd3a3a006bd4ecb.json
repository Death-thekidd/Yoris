{"ast":null,"code":"var emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\nvar phoneRegex = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g;\nvar nameRegex = /^[a-zA-Z]+$/g;\nvar userNameRegex = /^[a-zA-Z0-9]+$/g;\nvar condition0 = /(?=.*[a-zA-Z])/;\nvar condition1 = /(?=.*\\d)/;\nvar condition2 = /(?=.*[a-z])/;\nvar condition3 = /(?= .*[A-Z])/;\nvar condition4 = /[a-zA-Z0-9]{8,}/;\n\nfunction empty(value) {\n  if (isEmpty(value.trim())) return true;else return false;\n}\n\nfunction isEmpty(value) {\n  if (value === \"\") return true;\n  return false;\n}\n\nfunction onlyLetters(value) {\n  if (nameRegex.test(value)) return true;else {\n    return false;\n  }\n}\n\nfunction meetLength(value, name, minLength, maxLength) {\n  if (value.length > minLength && value.length < maxLength) {\n    return true;\n  }\n\n  if (value.length < minLength) {\n    setError({\n      name: name,\n      message: name + \" cannot be less than \" + minLength\n    });\n    return false;\n  }\n\n  if (field.value.length > maxLength) {\n    setError(name, name + \" cannot be more than \" + maxLength);\n    return false;\n  }\n\n  return false;\n}\n\nfunction containsChar(value, code) {\n  switch (code) {\n    case 1:\n      return matchWithRegex(condition0, value);\n\n    case 2:\n      return matchWithRegex(condition1, value);\n\n    case 3:\n      return matchWithRegex(condition2, value);\n\n    case 4:\n      return matchWithRegex(condition3, value);\n\n    case 5:\n      return matchWithRegex(condition4, value);\n\n    case \"email\":\n      return matchWithRegex(emailRegex, value);\n\n    case \"phone\":\n      return matchWithRegex(phoneRegex, value);\n\n    case \"username\":\n      return matchWithRegex(userNameRegex, value);\n\n    default:\n      return false;\n  }\n}\n\nfunction matchWithRegex(regEx, value) {\n  if (value.match(regEx)) return true;else {\n    return false;\n  }\n}\n\nexport var addressCheck = function addressCheck(value) {\n  if (!value || empty(value)) return false;\n  return true;\n};\nexport var phoneCheck = function phoneCheck(value) {\n  if (!value || !containsChar(value, \"phone\")) return false;\n  return true;\n};\nexport var nameCheck = function nameCheck(value) {\n  if (!value || empty(value) || !onlyLetters(value)) return false;\n  return true;\n};","map":{"version":3,"names":["emailRegex","phoneRegex","nameRegex","userNameRegex","condition0","condition1","condition2","condition3","condition4","empty","value","isEmpty","trim","onlyLetters","test","meetLength","name","minLength","maxLength","length","setError","message","field","containsChar","code","matchWithRegex","regEx","match","addressCheck","phoneCheck","nameCheck"],"sources":["C:/Users/karowrld/Yoris/src/util/valueValidator.js"],"sourcesContent":["const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\nconst phoneRegex = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g;\r\nconst nameRegex = /^[a-zA-Z]+$/g;\r\nconst userNameRegex = /^[a-zA-Z0-9]+$/g;\r\n\r\n// Password Conditions\r\nconst condition0 = /(?=.*[a-zA-Z])/; //should contain atleast 1 letter\r\nconst condition1 = /(?=.*\\d)/; //should contain atleast 1 digit\r\nconst condition2 = /(?=.*[a-z])/; //should contain atleast 1 lowercase\r\nconst condition3 = /(?= .*[A-Z])/; //should contain atleast 1 uppercase\r\nconst condition4 = /[a-zA-Z0-9]{8,}/; //should contain atleast 8 characters\r\n\r\n/** Checks if given value is empty\r\n * @params value @type string\r\n * @params name of given fiels\r\n * @params setError State to be passed\r\n */\r\nfunction empty(value) {\r\n  if (isEmpty(value.trim())) return true;\r\n  else return false;\r\n}\r\n\r\nfunction isEmpty(value) {\r\n  if (value === \"\") return true;\r\n\r\n  return false;\r\n}\r\n\r\nfunction onlyLetters(value) {\r\n  if (nameRegex.test(value)) return true;\r\n  else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction meetLength(value, name, minLength, maxLength) {\r\n  if (value.length > minLength && value.length < maxLength) {\r\n    return true;\r\n  }\r\n  if (value.length < minLength) {\r\n    setError({ name, message: `${name} cannot be less than ${minLength}` });\r\n    return false;\r\n  }\r\n  if (field.value.length > maxLength) {\r\n    setError(name, `${name} cannot be more than ${maxLength}`);\r\n    return false;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction containsChar(value, code) {\r\n  switch (code) {\r\n    case 1:\r\n      return matchWithRegex(condition0, value);\r\n\r\n    case 2:\r\n      return matchWithRegex(condition1, value);\r\n    case 3:\r\n      return matchWithRegex(condition2, value);\r\n    case 4:\r\n      return matchWithRegex(condition3, value);\r\n    case 5:\r\n      return matchWithRegex(condition4, value);\r\n    case \"email\":\r\n      return matchWithRegex(emailRegex, value);\r\n    case \"phone\":\r\n      return matchWithRegex(phoneRegex, value);\r\n    case \"username\":\r\n      return matchWithRegex(userNameRegex, value);\r\n\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nfunction matchWithRegex(regEx, value) {\r\n  if (value.match(regEx)) return true;\r\n  else {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Validation for Logistics Forms\r\n\r\nexport const addressCheck = (value) => {\r\n  if (!value || empty(value)) return false;\r\n  return true;\r\n};\r\n\r\nexport const phoneCheck = (value) => {\r\n  if (!value || !containsChar(value, \"phone\")) return false;\r\n  return true;\r\n};\r\n\r\nexport const nameCheck = (value) => {\r\n  if (!value || empty(value) || !onlyLetters(value)) return false;\r\n  return true;\r\n};\r\n\r\n// Example\r\n/* export const emailCheck = (value) => {\r\n  if (empty(value) || !containsChar(value, \"email\")) return false;\r\n\r\n  return true;\r\n};\r\n\r\n\r\n\r\nexport const userNameCheck = (field) => {\r\n  if (empty(field) || !containsChar(field, \"username\")) return false;\r\n  return true;\r\n};\r\n\r\n\r\n\r\nexport const passCheck = (field) => {\r\n  if (\r\n    empty(field) ||\r\n    !meetLength(field, 4, 30) ||\r\n    !containsChar(field, 1) ||\r\n    !containsChar(field, 2) ||\r\n    !containsChar(field, 3) ||\r\n    !containsChar(field, 4) ||\r\n    !containsChar(field, 5)\r\n  )\r\n    return false;\r\n  return true;\r\n};\r\n */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}