{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ViewStyle } from \"react-native-web/dist/index\";\nimport { TextStyle } from \"react-native-web/dist/index\";\nimport { Constants } from \"../../../constants/db.mock\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar STEP_STATUS = {\n  CURRENT: \"current\",\n  FINISHED: \"finished\",\n  UNFINISHED: \"unfinished\"\n};\nvar defaultStyles = {\n  stepIndicatorSize: 30,\n  currentStepIndicatorSize: 40,\n  separatorStrokeWidth: 3,\n  separatorStrokeUnfinishedWidth: 0,\n  separatorStrokeFinishedWidth: 0,\n  currentStepStrokeWidth: 5,\n  stepStrokeWidth: 0,\n  stepStrokeCurrentColor: \"#4aae4f\",\n  stepStrokeFinishedColor: \"#4aae4f\",\n  stepStrokeUnFinishedColor: \"#4aae4f\",\n  separatorFinishedColor: \"#4aae4f\",\n  separatorUnFinishedColor: \"#a4d4a5\",\n  stepIndicatorFinishedColor: \"#4aae4f\",\n  stepIndicatorUnFinishedColor: \"#a4d4a5\",\n  stepIndicatorCurrentColor: \"#ffffff\",\n  stepIndicatorLabelFontSize: 15,\n  currentStepIndicatorLabelFontSize: 15,\n  stepIndicatorLabelCurrentColor: Constants.theme.dark,\n  stepIndicatorLabelFinishedColor: \"#ffffff\",\n  stepIndicatorLabelUnFinishedColor: \"rgba(255,255,255,0.5)\",\n  labelColor: Constants.theme.dark,\n  labelSize: 13,\n  labelAlign: \"center\",\n  currentStepLabelColor: \"#4aae4f\"\n};\n\nvar StepIndicator = function StepIndicator(_ref) {\n  var _ref$currentPosition = _ref.currentPosition,\n      currentPosition = _ref$currentPosition === void 0 ? 0 : _ref$currentPosition,\n      _ref$stepCount = _ref.stepCount,\n      stepCount = _ref$stepCount === void 0 ? 5 : _ref$stepCount,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? \"horizontal\" : _ref$direction,\n      _ref$customStyles = _ref.customStyles,\n      customStylesFromProps = _ref$customStyles === void 0 ? defaultStyles : _ref$customStyles,\n      _ref$labels = _ref.labels,\n      labels = _ref$labels === void 0 ? [] : _ref$labels,\n      onPress = _ref.onPress,\n      renderCustomStepIndicator = _ref.renderStepIndicator,\n      renderLabel = _ref.renderLabel;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      width = _React$useState2[0],\n      setWidth = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      height = _React$useState4[0],\n      setHeight = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      progressBarSize = _React$useState6[0],\n      setProgressBarSize = _React$useState6[1];\n\n  var _React$useState7 = React.useState(_objectSpread(_objectSpread({}, defaultStyles), customStylesFromProps)),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      customStyles = _React$useState8[0],\n      setCustomStyles = _React$useState8[1];\n\n  var progressAnim = React.useRef(new Animated.Value(0)).current;\n  var sizeAnim = React.useRef(new Animated.Value(customStyles.stepIndicatorSize)).current;\n  var staleSizeAnim = React.useRef(new Animated.Value(customStyles.stepIndicatorSize)).current;\n  var borderRadiusAnim = React.useRef(new Animated.Value(customStyles.stepIndicatorSize / 2)).current;\n\n  var stepPressed = function stepPressed(position) {\n    if (onPress) {\n      onPress(position);\n    }\n  };\n\n  var effectCustomStyles = function effectCustomStyles() {\n    setCustomStyles(_objectSpread(_objectSpread({}, customStyles), customStylesFromProps));\n  };\n\n  React.useEffect(effectCustomStyles, [customStylesFromProps]);\n\n  var effectCurrentPosition = function effectCurrentPosition() {\n    onCurrentPositionChanged(currentPosition);\n  };\n\n  React.useEffect(effectCurrentPosition, [currentPosition, progressBarSize]);\n\n  var renderProgressBarBackground = function renderProgressBarBackground() {\n    var progressBarBackgroundStyle = {\n      backgroundColor: customStyles.separatorUnFinishedColor,\n      position: \"absolute\"\n    };\n\n    if (direction === \"vertical\") {\n      progressBarBackgroundStyle = _objectSpread(_objectSpread({}, progressBarBackgroundStyle), {}, {\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width: customStyles.separatorStrokeUnfinishedWidth === 0 ? customStyles.separatorStrokeWidth : customStyles.separatorStrokeUnfinishedWidth\n      });\n    } else {\n      progressBarBackgroundStyle = _objectSpread(_objectSpread({}, progressBarBackgroundStyle), {}, {\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height: customStyles.separatorStrokeUnfinishedWidth === 0 ? customStyles.separatorStrokeWidth : customStyles.separatorStrokeUnfinishedWidth\n      });\n    }\n\n    return _jsx(View, {\n      onLayout: function onLayout(event) {\n        if (direction === \"vertical\") {\n          setProgressBarSize(event.nativeEvent.layout.height);\n        } else {\n          setProgressBarSize(event.nativeEvent.layout.width);\n        }\n      },\n      style: progressBarBackgroundStyle\n    });\n  };\n\n  var renderProgressBar = function renderProgressBar() {\n    var progressBarStyle = {\n      backgroundColor: customStyles.separatorFinishedColor,\n      position: \"absolute\"\n    };\n\n    if (direction === \"vertical\") {\n      progressBarStyle = _objectSpread(_objectSpread({}, progressBarStyle), {}, {\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width: customStyles.separatorStrokeFinishedWidth === 0 ? customStyles.separatorStrokeWidth : customStyles.separatorStrokeFinishedWidth,\n        height: progressAnim\n      });\n    } else {\n      progressBarStyle = _objectSpread(_objectSpread({}, progressBarStyle), {}, {\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height: customStyles.separatorStrokeFinishedWidth === 0 ? customStyles.separatorStrokeWidth : customStyles.separatorStrokeFinishedWidth,\n        width: progressAnim\n      });\n    }\n\n    return _jsx(Animated.View, {\n      style: progressBarStyle\n    });\n  };\n\n  var renderStepIndicator = function renderStepIndicator() {\n    var steps = [];\n\n    var _loop = function _loop(position) {\n      steps.push(_jsx(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return stepPressed(position);\n        },\n        children: _jsx(View, {\n          style: [styles.stepContainer, direction === \"vertical\" ? {\n            flexDirection: \"column\"\n          } : {\n            flexDirection: \"row\"\n          }],\n          children: renderStep(position)\n        })\n      }, position));\n    };\n\n    for (var position = 0; position < stepCount; position++) {\n      _loop(position);\n    }\n\n    return _jsx(View, {\n      onLayout: function onLayout(event) {\n        setWidth(event.nativeEvent.layout.width);\n        setHeight(event.nativeEvent.layout.height);\n      },\n      style: [styles.stepIndicatorContainer, direction === \"vertical\" ? {\n        flexDirection: \"column\",\n        width: customStyles.currentStepIndicatorSize\n      } : {\n        flexDirection: \"row\",\n        height: customStyles.currentStepIndicatorSize\n      }],\n      children: steps\n    });\n  };\n\n  var renderStepLabels = function renderStepLabels() {\n    if (!labels || labels.length === 0) {\n      return;\n    }\n\n    var labelViews = labels.map(function (label, index) {\n      var selectedStepLabelStyle = index === currentPosition ? {\n        color: customStyles.currentStepLabelColor\n      } : {\n        color: customStyles.labelColor\n      };\n      return _jsx(TouchableWithoutFeedback, {\n        style: styles.stepLabelItem,\n        onPress: function onPress() {\n          return stepPressed(index);\n        },\n        children: _jsx(View, {\n          style: styles.stepLabelItem,\n          children: renderLabel ? renderLabel({\n            position: index,\n            stepStatus: getStepStatus(index),\n            label: label,\n            currentPosition: currentPosition\n          }) : _jsx(Text, {\n            style: [styles.stepLabel, selectedStepLabelStyle, {\n              fontSize: customStyles.labelSize,\n              fontFamily: customStyles.labelFontFamily\n            }],\n            children: label\n          })\n        })\n      }, index);\n    });\n    return _jsx(View, {\n      style: [styles.stepLabelsContainer, direction === \"vertical\" ? {\n        flexDirection: \"column\",\n        paddingHorizontal: 4\n      } : {\n        flexDirection: \"row\",\n        paddingVertical: 4\n      }, {\n        alignItems: customStyles.labelAlign\n      }],\n      children: labelViews\n    });\n  };\n\n  var renderStep = function renderStep(position) {\n    var stepStyle;\n    var indicatorLabelStyle = {};\n\n    switch (getStepStatus(position)) {\n      case STEP_STATUS.CURRENT:\n        {\n          stepStyle = {\n            backgroundColor: customStyles.stepIndicatorCurrentColor,\n            borderWidth: customStyles.currentStepStrokeWidth,\n            borderColor: customStyles.stepStrokeCurrentColor,\n            height: sizeAnim,\n            width: sizeAnim,\n            borderRadius: borderRadiusAnim,\n            overflow: \"hidden\"\n          };\n          indicatorLabelStyle = {\n            overflow: \"hidden\",\n            fontSize: customStyles.currentStepIndicatorLabelFontSize,\n            color: customStyles.stepIndicatorLabelCurrentColor\n          };\n          break;\n        }\n\n      case STEP_STATUS.FINISHED:\n        {\n          stepStyle = {\n            backgroundColor: customStyles.stepIndicatorFinishedColor,\n            borderWidth: customStyles.stepStrokeWidth,\n            borderColor: customStyles.stepStrokeFinishedColor,\n            height: staleSizeAnim,\n            width: staleSizeAnim,\n            borderRadius: customStyles.stepIndicatorSize / 2,\n            overflow: \"hidden\"\n          };\n          indicatorLabelStyle = {\n            overflow: \"hidden\",\n            fontSize: customStyles.stepIndicatorLabelFontSize,\n            color: customStyles.stepIndicatorLabelFinishedColor\n          };\n          break;\n        }\n\n      case STEP_STATUS.UNFINISHED:\n        {\n          stepStyle = {\n            backgroundColor: customStyles.stepIndicatorUnFinishedColor,\n            borderWidth: customStyles.stepStrokeWidth,\n            borderColor: customStyles.stepStrokeUnFinishedColor,\n            height: staleSizeAnim,\n            width: staleSizeAnim,\n            borderRadius: customStyles.stepIndicatorSize / 2,\n            overflow: \"hidden\"\n          };\n          indicatorLabelStyle = {\n            overflow: \"hidden\",\n            fontSize: customStyles.stepIndicatorLabelFontSize,\n            color: customStyles.stepIndicatorLabelUnFinishedColor\n          };\n          break;\n        }\n\n      default:\n    }\n\n    return _jsx(Animated.View, {\n      style: [styles.step, stepStyle],\n      children: renderCustomStepIndicator ? renderCustomStepIndicator({\n        position: position,\n        stepStatus: getStepStatus(position)\n      }) : _jsx(Text, {\n        style: indicatorLabelStyle,\n        children: \"\" + (position + 1)\n      })\n    }, \"step-indicator\");\n  };\n\n  var getStepStatus = function getStepStatus(stepPosition) {\n    if (stepPosition === currentPosition) {\n      return STEP_STATUS.CURRENT;\n    } else if (stepPosition < currentPosition) {\n      return STEP_STATUS.FINISHED;\n    } else {\n      return STEP_STATUS.UNFINISHED;\n    }\n  };\n\n  var onCurrentPositionChanged = function onCurrentPositionChanged(position) {\n    if (position > stepCount - 1) {\n      position = stepCount - 1;\n    }\n\n    var animateToPosition = progressBarSize / (stepCount - 1) * position;\n    sizeAnim.setValue(customStyles.stepIndicatorSize);\n    staleSizeAnim.setValue(customStyles.stepIndicatorSize);\n    borderRadiusAnim.setValue(customStyles.stepIndicatorSize / 2);\n    Animated.sequence([Animated.timing(progressAnim, {\n      toValue: isNaN(animateToPosition) ? 0 : animateToPosition,\n      duration: 200,\n      useNativeDriver: false\n    }), Animated.parallel([Animated.timing(sizeAnim, {\n      toValue: customStyles.currentStepIndicatorSize,\n      duration: 100,\n      useNativeDriver: false\n    }), Animated.timing(borderRadiusAnim, {\n      toValue: customStyles.currentStepIndicatorSize / 2,\n      duration: 100,\n      useNativeDriver: false\n    })])]).start();\n  };\n\n  return _jsxs(View, {\n    style: [styles.container, direction === \"vertical\" ? {\n      flexDirection: \"row\",\n      flex: 1\n    } : {\n      flexDirection: \"column\"\n    }],\n    children: [width !== 0 && _jsxs(React.Fragment, {\n      children: [renderProgressBarBackground(), renderProgressBar()]\n    }), renderStepIndicator(), labels && renderStepLabels()]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(1,0,0,0)\"\n  },\n  stepIndicatorContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    backgroundColor: \"rgba(1,0,0,0)\"\n  },\n  stepLabelsContainer: {\n    justifyContent: \"space-around\"\n  },\n  step: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    zIndex: 2\n  },\n  stepContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  stepLabel: {\n    fontSize: 12,\n    textAlign: \"center\",\n    fontWeight: \"500\"\n  },\n  stepLabelItem: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default React.memo(StepIndicator);","map":{"version":3,"names":["React","ViewStyle","TextStyle","Constants","STEP_STATUS","CURRENT","FINISHED","UNFINISHED","defaultStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","separatorStrokeUnfinishedWidth","separatorStrokeFinishedWidth","currentStepStrokeWidth","stepStrokeWidth","stepStrokeCurrentColor","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","theme","dark","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","labelAlign","currentStepLabelColor","StepIndicator","currentPosition","stepCount","direction","customStyles","customStylesFromProps","labels","onPress","renderCustomStepIndicator","renderStepIndicator","renderLabel","useState","width","setWidth","height","setHeight","progressBarSize","setProgressBarSize","setCustomStyles","progressAnim","useRef","Animated","Value","current","sizeAnim","staleSizeAnim","borderRadiusAnim","stepPressed","position","effectCustomStyles","useEffect","effectCurrentPosition","onCurrentPositionChanged","renderProgressBarBackground","progressBarBackgroundStyle","backgroundColor","left","top","bottom","right","event","nativeEvent","layout","renderProgressBar","progressBarStyle","steps","push","styles","stepContainer","flexDirection","renderStep","stepIndicatorContainer","renderStepLabels","length","labelViews","map","label","index","selectedStepLabelStyle","color","stepLabelItem","stepStatus","getStepStatus","stepLabel","fontSize","fontFamily","labelFontFamily","stepLabelsContainer","paddingHorizontal","paddingVertical","alignItems","stepStyle","indicatorLabelStyle","borderWidth","borderColor","borderRadius","overflow","step","stepPosition","animateToPosition","setValue","sequence","timing","toValue","isNaN","duration","useNativeDriver","parallel","start","container","flex","StyleSheet","create","justifyContent","zIndex","textAlign","fontWeight","memo"],"sources":["C:/Users/USER/Desktop/Yoris/src/components/StepIndicator/index.js"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  TouchableWithoutFeedback,\r\n  ViewStyle,\r\n  TextStyle,\r\n} from \"react-native\";\r\nimport { Constants } from \"../../../constants/db.mock\";\r\n\r\nconst STEP_STATUS = {\r\n  CURRENT: \"current\",\r\n  FINISHED: \"finished\",\r\n  UNFINISHED: \"unfinished\",\r\n};\r\n\r\nconst defaultStyles = {\r\n  stepIndicatorSize: 30,\r\n  currentStepIndicatorSize: 40,\r\n  separatorStrokeWidth: 3,\r\n  separatorStrokeUnfinishedWidth: 0,\r\n  separatorStrokeFinishedWidth: 0,\r\n  currentStepStrokeWidth: 5,\r\n  stepStrokeWidth: 0,\r\n  stepStrokeCurrentColor: \"#4aae4f\",\r\n  stepStrokeFinishedColor: \"#4aae4f\",\r\n  stepStrokeUnFinishedColor: \"#4aae4f\",\r\n  separatorFinishedColor: \"#4aae4f\",\r\n  separatorUnFinishedColor: \"#a4d4a5\",\r\n  stepIndicatorFinishedColor: \"#4aae4f\",\r\n  stepIndicatorUnFinishedColor: \"#a4d4a5\",\r\n  stepIndicatorCurrentColor: \"#ffffff\",\r\n  stepIndicatorLabelFontSize: 15,\r\n  currentStepIndicatorLabelFontSize: 15,\r\n  stepIndicatorLabelCurrentColor: Constants.theme.dark,\r\n  stepIndicatorLabelFinishedColor: \"#ffffff\",\r\n  stepIndicatorLabelUnFinishedColor: \"rgba(255,255,255,0.5)\",\r\n  labelColor: Constants.theme.dark,\r\n  labelSize: 13,\r\n  labelAlign: \"center\",\r\n  currentStepLabelColor: \"#4aae4f\",\r\n};\r\n\r\nconst StepIndicator = ({\r\n  currentPosition = 0,\r\n  stepCount = 5,\r\n  direction = \"horizontal\",\r\n  customStyles: customStylesFromProps = defaultStyles,\r\n  labels = [],\r\n  onPress,\r\n  renderStepIndicator: renderCustomStepIndicator,\r\n  renderLabel,\r\n}) => {\r\n  const [width, setWidth] = React.useState(0);\r\n  const [height, setHeight] = React.useState(0);\r\n  const [progressBarSize, setProgressBarSize] = React.useState(0);\r\n  const [customStyles, setCustomStyles] = React.useState({\r\n    ...defaultStyles,\r\n    ...customStylesFromProps,\r\n  });\r\n\r\n  const progressAnim = React.useRef(new Animated.Value(0)).current;\r\n  const sizeAnim = React.useRef(\r\n    new Animated.Value(customStyles.stepIndicatorSize)\r\n  ).current;\r\n  const staleSizeAnim = React.useRef(\r\n    new Animated.Value(customStyles.stepIndicatorSize)\r\n  ).current;\r\n  const borderRadiusAnim = React.useRef(\r\n    new Animated.Value(customStyles.stepIndicatorSize / 2)\r\n  ).current;\r\n\r\n  const stepPressed = (position) => {\r\n    if (onPress) {\r\n      onPress(position);\r\n    }\r\n  };\r\n\r\n  const effectCustomStyles = () => {\r\n    setCustomStyles({ ...customStyles, ...customStylesFromProps });\r\n  };\r\n  React.useEffect(effectCustomStyles, [customStylesFromProps]);\r\n\r\n  const effectCurrentPosition = () => {\r\n    onCurrentPositionChanged(currentPosition);\r\n  };\r\n  React.useEffect(effectCurrentPosition, [currentPosition, progressBarSize]);\r\n\r\n  const renderProgressBarBackground = () => {\r\n    let progressBarBackgroundStyle = {\r\n      backgroundColor: customStyles.separatorUnFinishedColor,\r\n      position: \"absolute\",\r\n    };\r\n    if (direction === \"vertical\") {\r\n      progressBarBackgroundStyle = {\r\n        ...progressBarBackgroundStyle,\r\n        left: (width - customStyles.separatorStrokeWidth) / 2,\r\n        top: height / (2 * stepCount),\r\n        bottom: height / (2 * stepCount),\r\n        width:\r\n          customStyles.separatorStrokeUnfinishedWidth === 0\r\n            ? customStyles.separatorStrokeWidth\r\n            : customStyles.separatorStrokeUnfinishedWidth,\r\n      };\r\n    } else {\r\n      progressBarBackgroundStyle = {\r\n        ...progressBarBackgroundStyle,\r\n        top: (height - customStyles.separatorStrokeWidth) / 2,\r\n        left: width / (2 * stepCount),\r\n        right: width / (2 * stepCount),\r\n        height:\r\n          customStyles.separatorStrokeUnfinishedWidth === 0\r\n            ? customStyles.separatorStrokeWidth\r\n            : customStyles.separatorStrokeUnfinishedWidth,\r\n      };\r\n    }\r\n    return (\r\n      <View\r\n        onLayout={(event) => {\r\n          if (direction === \"vertical\") {\r\n            setProgressBarSize(event.nativeEvent.layout.height);\r\n          } else {\r\n            setProgressBarSize(event.nativeEvent.layout.width);\r\n          }\r\n        }}\r\n        style={progressBarBackgroundStyle}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderProgressBar = () => {\r\n    let progressBarStyle = {\r\n      backgroundColor: customStyles.separatorFinishedColor,\r\n      position: \"absolute\",\r\n    };\r\n    if (direction === \"vertical\") {\r\n      progressBarStyle = {\r\n        ...progressBarStyle,\r\n        left: (width - customStyles.separatorStrokeWidth) / 2,\r\n        top: height / (2 * stepCount),\r\n        bottom: height / (2 * stepCount),\r\n        width:\r\n          customStyles.separatorStrokeFinishedWidth === 0\r\n            ? customStyles.separatorStrokeWidth\r\n            : customStyles.separatorStrokeFinishedWidth,\r\n        height: progressAnim,\r\n      };\r\n    } else {\r\n      progressBarStyle = {\r\n        ...progressBarStyle,\r\n        top: (height - customStyles.separatorStrokeWidth) / 2,\r\n        left: width / (2 * stepCount),\r\n        right: width / (2 * stepCount),\r\n        height:\r\n          customStyles.separatorStrokeFinishedWidth === 0\r\n            ? customStyles.separatorStrokeWidth\r\n            : customStyles.separatorStrokeFinishedWidth,\r\n        width: progressAnim,\r\n      };\r\n    }\r\n    return <Animated.View style={progressBarStyle} />;\r\n  };\r\n\r\n  const renderStepIndicator = () => {\r\n    let steps = [];\r\n    for (let position = 0; position < stepCount; position++) {\r\n      steps.push(\r\n        <TouchableWithoutFeedback\r\n          key={position}\r\n          onPress={() => stepPressed(position)}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.stepContainer,\r\n              direction === \"vertical\"\r\n                ? { flexDirection: \"column\" }\r\n                : { flexDirection: \"row\" },\r\n            ]}\r\n          >\r\n            {renderStep(position)}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      );\r\n    }\r\n    return (\r\n      <View\r\n        onLayout={(event) => {\r\n          setWidth(event.nativeEvent.layout.width);\r\n          setHeight(event.nativeEvent.layout.height);\r\n        }}\r\n        style={[\r\n          styles.stepIndicatorContainer,\r\n          direction === \"vertical\"\r\n            ? {\r\n                flexDirection: \"column\",\r\n                width: customStyles.currentStepIndicatorSize,\r\n              }\r\n            : {\r\n                flexDirection: \"row\",\r\n                height: customStyles.currentStepIndicatorSize,\r\n              },\r\n        ]}\r\n      >\r\n        {steps}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderStepLabels = () => {\r\n    if (!labels || labels.length === 0) {\r\n      return;\r\n    }\r\n\r\n    var labelViews = labels.map((label, index) => {\r\n      const selectedStepLabelStyle =\r\n        index === currentPosition\r\n          ? { color: customStyles.currentStepLabelColor }\r\n          : { color: customStyles.labelColor };\r\n\r\n      return (\r\n        <TouchableWithoutFeedback\r\n          style={styles.stepLabelItem}\r\n          key={index}\r\n          onPress={() => stepPressed(index)}\r\n        >\r\n          <View style={styles.stepLabelItem}>\r\n            {renderLabel ? (\r\n              renderLabel({\r\n                position: index,\r\n                stepStatus: getStepStatus(index),\r\n                label,\r\n                currentPosition,\r\n              })\r\n            ) : (\r\n              <Text\r\n                style={[\r\n                  styles.stepLabel,\r\n                  selectedStepLabelStyle,\r\n                  {\r\n                    fontSize: customStyles.labelSize,\r\n                    fontFamily: customStyles.labelFontFamily,\r\n                  },\r\n                ]}\r\n              >\r\n                {label}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.stepLabelsContainer,\r\n          direction === \"vertical\"\r\n            ? { flexDirection: \"column\", paddingHorizontal: 4 }\r\n            : { flexDirection: \"row\", paddingVertical: 4 },\r\n          { alignItems: customStyles.labelAlign },\r\n        ]}\r\n      >\r\n        {labelViews}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderStep = (position) => {\r\n    let stepStyle;\r\n    let indicatorLabelStyle = {};\r\n    switch (getStepStatus(position)) {\r\n      case STEP_STATUS.CURRENT: {\r\n        stepStyle = {\r\n          backgroundColor: customStyles.stepIndicatorCurrentColor,\r\n          borderWidth: customStyles.currentStepStrokeWidth,\r\n          borderColor: customStyles.stepStrokeCurrentColor,\r\n          height: sizeAnim,\r\n          width: sizeAnim,\r\n          borderRadius: borderRadiusAnim,\r\n          overflow: \"hidden\",\r\n        };\r\n        indicatorLabelStyle = {\r\n          overflow: \"hidden\",\r\n          fontSize: customStyles.currentStepIndicatorLabelFontSize,\r\n          color: customStyles.stepIndicatorLabelCurrentColor,\r\n        };\r\n\r\n        break;\r\n      }\r\n      case STEP_STATUS.FINISHED: {\r\n        stepStyle = {\r\n          backgroundColor: customStyles.stepIndicatorFinishedColor,\r\n          borderWidth: customStyles.stepStrokeWidth,\r\n          borderColor: customStyles.stepStrokeFinishedColor,\r\n          height: staleSizeAnim,\r\n          width: staleSizeAnim,\r\n          borderRadius: customStyles.stepIndicatorSize / 2,\r\n          overflow: \"hidden\",\r\n        };\r\n        indicatorLabelStyle = {\r\n          overflow: \"hidden\",\r\n          fontSize: customStyles.stepIndicatorLabelFontSize,\r\n          color: customStyles.stepIndicatorLabelFinishedColor,\r\n        };\r\n        break;\r\n      }\r\n\r\n      case STEP_STATUS.UNFINISHED: {\r\n        stepStyle = {\r\n          backgroundColor: customStyles.stepIndicatorUnFinishedColor,\r\n          borderWidth: customStyles.stepStrokeWidth,\r\n          borderColor: customStyles.stepStrokeUnFinishedColor,\r\n          height: staleSizeAnim,\r\n          width: staleSizeAnim,\r\n          borderRadius: customStyles.stepIndicatorSize / 2,\r\n          overflow: \"hidden\",\r\n        };\r\n        indicatorLabelStyle = {\r\n          overflow: \"hidden\",\r\n          fontSize: customStyles.stepIndicatorLabelFontSize,\r\n          color: customStyles.stepIndicatorLabelUnFinishedColor,\r\n        };\r\n        break;\r\n      }\r\n      default:\r\n    }\r\n\r\n    return (\r\n      <Animated.View key={\"step-indicator\"} style={[styles.step, stepStyle]}>\r\n        {renderCustomStepIndicator ? (\r\n          renderCustomStepIndicator({\r\n            position,\r\n            stepStatus: getStepStatus(position),\r\n          })\r\n        ) : (\r\n          <Text style={indicatorLabelStyle}>{`${position + 1}`}</Text>\r\n        )}\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  const getStepStatus = (stepPosition) => {\r\n    if (stepPosition === currentPosition) {\r\n      return STEP_STATUS.CURRENT;\r\n    } else if (stepPosition < currentPosition) {\r\n      return STEP_STATUS.FINISHED;\r\n    } else {\r\n      return STEP_STATUS.UNFINISHED;\r\n    }\r\n  };\r\n\r\n  const onCurrentPositionChanged = (position) => {\r\n    if (position > stepCount - 1) {\r\n      position = stepCount - 1;\r\n    }\r\n    const animateToPosition = (progressBarSize / (stepCount - 1)) * position;\r\n    sizeAnim.setValue(customStyles.stepIndicatorSize);\r\n    staleSizeAnim.setValue(customStyles.stepIndicatorSize);\r\n    borderRadiusAnim.setValue(customStyles.stepIndicatorSize / 2);\r\n    Animated.sequence([\r\n      Animated.timing(progressAnim, {\r\n        toValue: isNaN(animateToPosition) ? 0 : animateToPosition,\r\n        duration: 200,\r\n        useNativeDriver: false,\r\n      }),\r\n      Animated.parallel([\r\n        Animated.timing(sizeAnim, {\r\n          toValue: customStyles.currentStepIndicatorSize,\r\n          duration: 100,\r\n          useNativeDriver: false,\r\n        }),\r\n        Animated.timing(borderRadiusAnim, {\r\n          toValue: customStyles.currentStepIndicatorSize / 2,\r\n          duration: 100,\r\n          useNativeDriver: false,\r\n        }),\r\n      ]),\r\n    ]).start();\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.container,\r\n        direction === \"vertical\"\r\n          ? { flexDirection: \"row\", flex: 1 }\r\n          : { flexDirection: \"column\" },\r\n      ]}\r\n    >\r\n      {width !== 0 && (\r\n        <React.Fragment>\r\n          {renderProgressBarBackground()}\r\n          {renderProgressBar()}\r\n        </React.Fragment>\r\n      )}\r\n      {renderStepIndicator()}\r\n      {labels && renderStepLabels()}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"rgba(1,0,0,0)\",\r\n  },\r\n  stepIndicatorContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    backgroundColor: \"rgba(1,0,0,0)\",\r\n  },\r\n  stepLabelsContainer: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n  step: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    zIndex: 2,\r\n  },\r\n  stepContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  stepLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n    fontWeight: \"500\",\r\n  },\r\n  stepLabelItem: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default React.memo(StepIndicator);\r\n"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;SAOEC,S;SACAC,S;AAEF,SAASC,SAAT;;;AAEA,IAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,SADS;EAElBC,QAAQ,EAAE,UAFQ;EAGlBC,UAAU,EAAE;AAHM,CAApB;AAMA,IAAMC,aAAa,GAAG;EACpBC,iBAAiB,EAAE,EADC;EAEpBC,wBAAwB,EAAE,EAFN;EAGpBC,oBAAoB,EAAE,CAHF;EAIpBC,8BAA8B,EAAE,CAJZ;EAKpBC,4BAA4B,EAAE,CALV;EAMpBC,sBAAsB,EAAE,CANJ;EAOpBC,eAAe,EAAE,CAPG;EAQpBC,sBAAsB,EAAE,SARJ;EASpBC,uBAAuB,EAAE,SATL;EAUpBC,yBAAyB,EAAE,SAVP;EAWpBC,sBAAsB,EAAE,SAXJ;EAYpBC,wBAAwB,EAAE,SAZN;EAapBC,0BAA0B,EAAE,SAbR;EAcpBC,4BAA4B,EAAE,SAdV;EAepBC,yBAAyB,EAAE,SAfP;EAgBpBC,0BAA0B,EAAE,EAhBR;EAiBpBC,iCAAiC,EAAE,EAjBf;EAkBpBC,8BAA8B,EAAEvB,SAAS,CAACwB,KAAV,CAAgBC,IAlB5B;EAmBpBC,+BAA+B,EAAE,SAnBb;EAoBpBC,iCAAiC,EAAE,uBApBf;EAqBpBC,UAAU,EAAE5B,SAAS,CAACwB,KAAV,CAAgBC,IArBR;EAsBpBI,SAAS,EAAE,EAtBS;EAuBpBC,UAAU,EAAE,QAvBQ;EAwBpBC,qBAAqB,EAAE;AAxBH,CAAtB;;AA2BA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAShB;EAAA,gCARJC,eAQI;EAAA,IARJA,eAQI,qCARc,CAQd;EAAA,0BAPJC,SAOI;EAAA,IAPJA,SAOI,+BAPQ,CAOR;EAAA,0BANJC,SAMI;EAAA,IANJA,SAMI,+BANQ,YAMR;EAAA,6BALJC,YAKI;EAAA,IALUC,qBAKV,kCALkChC,aAKlC;EAAA,uBAJJiC,MAII;EAAA,IAJJA,MAII,4BAJK,EAIL;EAAA,IAHJC,OAGI,QAHJA,OAGI;EAAA,IAFiBC,yBAEjB,QAFJC,mBAEI;EAAA,IADJC,WACI,QADJA,WACI;;EACJ,sBAA0B7C,KAAK,CAAC8C,QAAN,CAAe,CAAf,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EACA,uBAA4BhD,KAAK,CAAC8C,QAAN,CAAe,CAAf,CAA5B;EAAA;EAAA,IAAOG,MAAP;EAAA,IAAeC,SAAf;;EACA,uBAA8ClD,KAAK,CAAC8C,QAAN,CAAe,CAAf,CAA9C;EAAA;EAAA,IAAOK,eAAP;EAAA,IAAwBC,kBAAxB;;EACA,uBAAwCpD,KAAK,CAAC8C,QAAN,iCACnCtC,aADmC,GAEnCgC,qBAFmC,EAAxC;EAAA;EAAA,IAAOD,YAAP;EAAA,IAAqBc,eAArB;;EAKA,IAAMC,YAAY,GAAGtD,KAAK,CAACuD,MAAN,CAAa,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAb,EAAoCC,OAAzD;EACA,IAAMC,QAAQ,GAAG3D,KAAK,CAACuD,MAAN,CACf,IAAIC,QAAQ,CAACC,KAAb,CAAmBlB,YAAY,CAAC9B,iBAAhC,CADe,EAEfiD,OAFF;EAGA,IAAME,aAAa,GAAG5D,KAAK,CAACuD,MAAN,CACpB,IAAIC,QAAQ,CAACC,KAAb,CAAmBlB,YAAY,CAAC9B,iBAAhC,CADoB,EAEpBiD,OAFF;EAGA,IAAMG,gBAAgB,GAAG7D,KAAK,CAACuD,MAAN,CACvB,IAAIC,QAAQ,CAACC,KAAb,CAAmBlB,YAAY,CAAC9B,iBAAb,GAAiC,CAApD,CADuB,EAEvBiD,OAFF;;EAIA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;IAChC,IAAIrB,OAAJ,EAAa;MACXA,OAAO,CAACqB,QAAD,CAAP;IACD;EACF,CAJD;;EAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;IAC/BX,eAAe,iCAAMd,YAAN,GAAuBC,qBAAvB,EAAf;EACD,CAFD;;EAGAxC,KAAK,CAACiE,SAAN,CAAgBD,kBAAhB,EAAoC,CAACxB,qBAAD,CAApC;;EAEA,IAAM0B,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;IAClCC,wBAAwB,CAAC/B,eAAD,CAAxB;EACD,CAFD;;EAGApC,KAAK,CAACiE,SAAN,CAAgBC,qBAAhB,EAAuC,CAAC9B,eAAD,EAAkBe,eAAlB,CAAvC;;EAEA,IAAMiB,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAM;IACxC,IAAIC,0BAA0B,GAAG;MAC/BC,eAAe,EAAE/B,YAAY,CAACnB,wBADC;MAE/B2C,QAAQ,EAAE;IAFqB,CAAjC;;IAIA,IAAIzB,SAAS,KAAK,UAAlB,EAA8B;MAC5B+B,0BAA0B,mCACrBA,0BADqB;QAExBE,IAAI,EAAE,CAACxB,KAAK,GAAGR,YAAY,CAAC5B,oBAAtB,IAA8C,CAF5B;QAGxB6D,GAAG,EAAEvB,MAAM,IAAI,IAAIZ,SAAR,CAHa;QAIxBoC,MAAM,EAAExB,MAAM,IAAI,IAAIZ,SAAR,CAJU;QAKxBU,KAAK,EACHR,YAAY,CAAC3B,8BAAb,KAAgD,CAAhD,GACI2B,YAAY,CAAC5B,oBADjB,GAEI4B,YAAY,CAAC3B;MARK,EAA1B;IAUD,CAXD,MAWO;MACLyD,0BAA0B,mCACrBA,0BADqB;QAExBG,GAAG,EAAE,CAACvB,MAAM,GAAGV,YAAY,CAAC5B,oBAAvB,IAA+C,CAF5B;QAGxB4D,IAAI,EAAExB,KAAK,IAAI,IAAIV,SAAR,CAHa;QAIxBqC,KAAK,EAAE3B,KAAK,IAAI,IAAIV,SAAR,CAJY;QAKxBY,MAAM,EACJV,YAAY,CAAC3B,8BAAb,KAAgD,CAAhD,GACI2B,YAAY,CAAC5B,oBADjB,GAEI4B,YAAY,CAAC3B;MARK,EAA1B;IAUD;;IACD,OACE,KAAC,IAAD;MACE,QAAQ,EAAE,kBAAC+D,KAAD,EAAW;QACnB,IAAIrC,SAAS,KAAK,UAAlB,EAA8B;UAC5Bc,kBAAkB,CAACuB,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyB5B,MAA1B,CAAlB;QACD,CAFD,MAEO;UACLG,kBAAkB,CAACuB,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyB9B,KAA1B,CAAlB;QACD;MACF,CAPH;MAQE,KAAK,EAAEsB;IART,EADF;EAYD,CAxCD;;EA0CA,IAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;IAC9B,IAAIC,gBAAgB,GAAG;MACrBT,eAAe,EAAE/B,YAAY,CAACpB,sBADT;MAErB4C,QAAQ,EAAE;IAFW,CAAvB;;IAIA,IAAIzB,SAAS,KAAK,UAAlB,EAA8B;MAC5ByC,gBAAgB,mCACXA,gBADW;QAEdR,IAAI,EAAE,CAACxB,KAAK,GAAGR,YAAY,CAAC5B,oBAAtB,IAA8C,CAFtC;QAGd6D,GAAG,EAAEvB,MAAM,IAAI,IAAIZ,SAAR,CAHG;QAIdoC,MAAM,EAAExB,MAAM,IAAI,IAAIZ,SAAR,CAJA;QAKdU,KAAK,EACHR,YAAY,CAAC1B,4BAAb,KAA8C,CAA9C,GACI0B,YAAY,CAAC5B,oBADjB,GAEI4B,YAAY,CAAC1B,4BARL;QASdoC,MAAM,EAAEK;MATM,EAAhB;IAWD,CAZD,MAYO;MACLyB,gBAAgB,mCACXA,gBADW;QAEdP,GAAG,EAAE,CAACvB,MAAM,GAAGV,YAAY,CAAC5B,oBAAvB,IAA+C,CAFtC;QAGd4D,IAAI,EAAExB,KAAK,IAAI,IAAIV,SAAR,CAHG;QAIdqC,KAAK,EAAE3B,KAAK,IAAI,IAAIV,SAAR,CAJE;QAKdY,MAAM,EACJV,YAAY,CAAC1B,4BAAb,KAA8C,CAA9C,GACI0B,YAAY,CAAC5B,oBADjB,GAEI4B,YAAY,CAAC1B,4BARL;QASdkC,KAAK,EAAEO;MATO,EAAhB;IAWD;;IACD,OAAO,KAAC,QAAD,CAAU,IAAV;MAAe,KAAK,EAAEyB;IAAtB,EAAP;EACD,CA/BD;;EAiCA,IAAMnC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;IAChC,IAAIoC,KAAK,GAAG,EAAZ;;IADgC,2BAEvBjB,QAFuB;MAG9BiB,KAAK,CAACC,IAAN,CACE,KAAC,wBAAD;QAEE,OAAO,EAAE;UAAA,OAAMnB,WAAW,CAACC,QAAD,CAAjB;QAAA,CAFX;QAAA,UAIE,KAAC,IAAD;UACE,KAAK,EAAE,CACLmB,MAAM,CAACC,aADF,EAEL7C,SAAS,KAAK,UAAd,GACI;YAAE8C,aAAa,EAAE;UAAjB,CADJ,GAEI;YAAEA,aAAa,EAAE;UAAjB,CAJC,CADT;UAAA,UAQGC,UAAU,CAACtB,QAAD;QARb;MAJF,GACOA,QADP,CADF;IAH8B;;IAEhC,KAAK,IAAIA,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG1B,SAAlC,EAA6C0B,QAAQ,EAArD,EAAyD;MAAA,MAAhDA,QAAgD;IAkBxD;;IACD,OACE,KAAC,IAAD;MACE,QAAQ,EAAE,kBAACY,KAAD,EAAW;QACnB3B,QAAQ,CAAC2B,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyB9B,KAA1B,CAAR;QACAG,SAAS,CAACyB,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyB5B,MAA1B,CAAT;MACD,CAJH;MAKE,KAAK,EAAE,CACLiC,MAAM,CAACI,sBADF,EAELhD,SAAS,KAAK,UAAd,GACI;QACE8C,aAAa,EAAE,QADjB;QAEErC,KAAK,EAAER,YAAY,CAAC7B;MAFtB,CADJ,GAKI;QACE0E,aAAa,EAAE,KADjB;QAEEnC,MAAM,EAAEV,YAAY,CAAC7B;MAFvB,CAPC,CALT;MAAA,UAkBGsE;IAlBH,EADF;EAsBD,CA3CD;;EA6CA,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;IAC7B,IAAI,CAAC9C,MAAD,IAAWA,MAAM,CAAC+C,MAAP,KAAkB,CAAjC,EAAoC;MAClC;IACD;;IAED,IAAIC,UAAU,GAAGhD,MAAM,CAACiD,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;MAC5C,IAAMC,sBAAsB,GAC1BD,KAAK,KAAKxD,eAAV,GACI;QAAE0D,KAAK,EAAEvD,YAAY,CAACL;MAAtB,CADJ,GAEI;QAAE4D,KAAK,EAAEvD,YAAY,CAACR;MAAtB,CAHN;MAKA,OACE,KAAC,wBAAD;QACE,KAAK,EAAEmD,MAAM,CAACa,aADhB;QAGE,OAAO,EAAE;UAAA,OAAMjC,WAAW,CAAC8B,KAAD,CAAjB;QAAA,CAHX;QAAA,UAKE,KAAC,IAAD;UAAM,KAAK,EAAEV,MAAM,CAACa,aAApB;UAAA,UACGlD,WAAW,GACVA,WAAW,CAAC;YACVkB,QAAQ,EAAE6B,KADA;YAEVI,UAAU,EAAEC,aAAa,CAACL,KAAD,CAFf;YAGVD,KAAK,EAALA,KAHU;YAIVvD,eAAe,EAAfA;UAJU,CAAD,CADD,GAQV,KAAC,IAAD;YACE,KAAK,EAAE,CACL8C,MAAM,CAACgB,SADF,EAELL,sBAFK,EAGL;cACEM,QAAQ,EAAE5D,YAAY,CAACP,SADzB;cAEEoE,UAAU,EAAE7D,YAAY,CAAC8D;YAF3B,CAHK,CADT;YAAA,UAUGV;UAVH;QATJ;MALF,GAEOC,KAFP,CADF;IA+BD,CArCgB,CAAjB;IAuCA,OACE,KAAC,IAAD;MACE,KAAK,EAAE,CACLV,MAAM,CAACoB,mBADF,EAELhE,SAAS,KAAK,UAAd,GACI;QAAE8C,aAAa,EAAE,QAAjB;QAA2BmB,iBAAiB,EAAE;MAA9C,CADJ,GAEI;QAAEnB,aAAa,EAAE,KAAjB;QAAwBoB,eAAe,EAAE;MAAzC,CAJC,EAKL;QAAEC,UAAU,EAAElE,YAAY,CAACN;MAA3B,CALK,CADT;MAAA,UASGwD;IATH,EADF;EAaD,CAzDD;;EA2DA,IAAMJ,UAAU,GAAG,SAAbA,UAAa,CAACtB,QAAD,EAAc;IAC/B,IAAI2C,SAAJ;IACA,IAAIC,mBAAmB,GAAG,EAA1B;;IACA,QAAQV,aAAa,CAAClC,QAAD,CAArB;MACE,KAAK3D,WAAW,CAACC,OAAjB;QAA0B;UACxBqG,SAAS,GAAG;YACVpC,eAAe,EAAE/B,YAAY,CAAChB,yBADpB;YAEVqF,WAAW,EAAErE,YAAY,CAACzB,sBAFhB;YAGV+F,WAAW,EAAEtE,YAAY,CAACvB,sBAHhB;YAIViC,MAAM,EAAEU,QAJE;YAKVZ,KAAK,EAAEY,QALG;YAMVmD,YAAY,EAAEjD,gBANJ;YAOVkD,QAAQ,EAAE;UAPA,CAAZ;UASAJ,mBAAmB,GAAG;YACpBI,QAAQ,EAAE,QADU;YAEpBZ,QAAQ,EAAE5D,YAAY,CAACd,iCAFH;YAGpBqE,KAAK,EAAEvD,YAAY,CAACb;UAHA,CAAtB;UAMA;QACD;;MACD,KAAKtB,WAAW,CAACE,QAAjB;QAA2B;UACzBoG,SAAS,GAAG;YACVpC,eAAe,EAAE/B,YAAY,CAAClB,0BADpB;YAEVuF,WAAW,EAAErE,YAAY,CAACxB,eAFhB;YAGV8F,WAAW,EAAEtE,YAAY,CAACtB,uBAHhB;YAIVgC,MAAM,EAAEW,aAJE;YAKVb,KAAK,EAAEa,aALG;YAMVkD,YAAY,EAAEvE,YAAY,CAAC9B,iBAAb,GAAiC,CANrC;YAOVsG,QAAQ,EAAE;UAPA,CAAZ;UASAJ,mBAAmB,GAAG;YACpBI,QAAQ,EAAE,QADU;YAEpBZ,QAAQ,EAAE5D,YAAY,CAACf,0BAFH;YAGpBsE,KAAK,EAAEvD,YAAY,CAACV;UAHA,CAAtB;UAKA;QACD;;MAED,KAAKzB,WAAW,CAACG,UAAjB;QAA6B;UAC3BmG,SAAS,GAAG;YACVpC,eAAe,EAAE/B,YAAY,CAACjB,4BADpB;YAEVsF,WAAW,EAAErE,YAAY,CAACxB,eAFhB;YAGV8F,WAAW,EAAEtE,YAAY,CAACrB,yBAHhB;YAIV+B,MAAM,EAAEW,aAJE;YAKVb,KAAK,EAAEa,aALG;YAMVkD,YAAY,EAAEvE,YAAY,CAAC9B,iBAAb,GAAiC,CANrC;YAOVsG,QAAQ,EAAE;UAPA,CAAZ;UASAJ,mBAAmB,GAAG;YACpBI,QAAQ,EAAE,QADU;YAEpBZ,QAAQ,EAAE5D,YAAY,CAACf,0BAFH;YAGpBsE,KAAK,EAAEvD,YAAY,CAACT;UAHA,CAAtB;UAKA;QACD;;MACD;IAtDF;;IAyDA,OACE,KAAC,QAAD,CAAU,IAAV;MAAsC,KAAK,EAAE,CAACoD,MAAM,CAAC8B,IAAR,EAAcN,SAAd,CAA7C;MAAA,UACG/D,yBAAyB,GACxBA,yBAAyB,CAAC;QACxBoB,QAAQ,EAARA,QADwB;QAExBiC,UAAU,EAAEC,aAAa,CAAClC,QAAD;MAFD,CAAD,CADD,GAMxB,KAAC,IAAD;QAAM,KAAK,EAAE4C,mBAAb;QAAA,gBAAsC5C,QAAQ,GAAG,CAAjD;MAAA;IAPJ,GAAoB,gBAApB,CADF;EAYD,CAxED;;EA0EA,IAAMkC,aAAa,GAAG,SAAhBA,aAAgB,CAACgB,YAAD,EAAkB;IACtC,IAAIA,YAAY,KAAK7E,eAArB,EAAsC;MACpC,OAAOhC,WAAW,CAACC,OAAnB;IACD,CAFD,MAEO,IAAI4G,YAAY,GAAG7E,eAAnB,EAAoC;MACzC,OAAOhC,WAAW,CAACE,QAAnB;IACD,CAFM,MAEA;MACL,OAAOF,WAAW,CAACG,UAAnB;IACD;EACF,CARD;;EAUA,IAAM4D,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACJ,QAAD,EAAc;IAC7C,IAAIA,QAAQ,GAAG1B,SAAS,GAAG,CAA3B,EAA8B;MAC5B0B,QAAQ,GAAG1B,SAAS,GAAG,CAAvB;IACD;;IACD,IAAM6E,iBAAiB,GAAI/D,eAAe,IAAId,SAAS,GAAG,CAAhB,CAAhB,GAAsC0B,QAAhE;IACAJ,QAAQ,CAACwD,QAAT,CAAkB5E,YAAY,CAAC9B,iBAA/B;IACAmD,aAAa,CAACuD,QAAd,CAAuB5E,YAAY,CAAC9B,iBAApC;IACAoD,gBAAgB,CAACsD,QAAjB,CAA0B5E,YAAY,CAAC9B,iBAAb,GAAiC,CAA3D;IACA+C,QAAQ,CAAC4D,QAAT,CAAkB,CAChB5D,QAAQ,CAAC6D,MAAT,CAAgB/D,YAAhB,EAA8B;MAC5BgE,OAAO,EAAEC,KAAK,CAACL,iBAAD,CAAL,GAA2B,CAA3B,GAA+BA,iBADZ;MAE5BM,QAAQ,EAAE,GAFkB;MAG5BC,eAAe,EAAE;IAHW,CAA9B,CADgB,EAMhBjE,QAAQ,CAACkE,QAAT,CAAkB,CAChBlE,QAAQ,CAAC6D,MAAT,CAAgB1D,QAAhB,EAA0B;MACxB2D,OAAO,EAAE/E,YAAY,CAAC7B,wBADE;MAExB8G,QAAQ,EAAE,GAFc;MAGxBC,eAAe,EAAE;IAHO,CAA1B,CADgB,EAMhBjE,QAAQ,CAAC6D,MAAT,CAAgBxD,gBAAhB,EAAkC;MAChCyD,OAAO,EAAE/E,YAAY,CAAC7B,wBAAb,GAAwC,CADjB;MAEhC8G,QAAQ,EAAE,GAFsB;MAGhCC,eAAe,EAAE;IAHe,CAAlC,CANgB,CAAlB,CANgB,CAAlB,EAkBGE,KAlBH;EAmBD,CA3BD;;EA6BA,OACE,MAAC,IAAD;IACE,KAAK,EAAE,CACLzC,MAAM,CAAC0C,SADF,EAELtF,SAAS,KAAK,UAAd,GACI;MAAE8C,aAAa,EAAE,KAAjB;MAAwByC,IAAI,EAAE;IAA9B,CADJ,GAEI;MAAEzC,aAAa,EAAE;IAAjB,CAJC,CADT;IAAA,WAQGrC,KAAK,KAAK,CAAV,IACC,MAAC,KAAD,CAAO,QAAP;MAAA,WACGqB,2BAA2B,EAD9B,EAEGU,iBAAiB,EAFpB;IAAA,EATJ,EAcGlC,mBAAmB,EAdtB,EAeGH,MAAM,IAAI8C,gBAAgB,EAf7B;EAAA,EADF;AAmBD,CApWD;;AAsWA,IAAML,MAAM,GAAG4C,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTtD,eAAe,EAAE;EADR,CADoB;EAI/BgB,sBAAsB,EAAE;IACtBF,aAAa,EAAE,KADO;IAEtBqB,UAAU,EAAE,QAFU;IAGtBuB,cAAc,EAAE,cAHM;IAItB1D,eAAe,EAAE;EAJK,CAJO;EAU/BgC,mBAAmB,EAAE;IACnB0B,cAAc,EAAE;EADG,CAVU;EAa/BhB,IAAI,EAAE;IACJP,UAAU,EAAE,QADR;IAEJuB,cAAc,EAAE,QAFZ;IAGJC,MAAM,EAAE;EAHJ,CAbyB;EAkB/B9C,aAAa,EAAE;IACb0C,IAAI,EAAE,CADO;IAEbzC,aAAa,EAAE,KAFF;IAGbqB,UAAU,EAAE,QAHC;IAIbuB,cAAc,EAAE;EAJH,CAlBgB;EAwB/B9B,SAAS,EAAE;IACTC,QAAQ,EAAE,EADD;IAET+B,SAAS,EAAE,QAFF;IAGTC,UAAU,EAAE;EAHH,CAxBoB;EA6B/BpC,aAAa,EAAE;IACb8B,IAAI,EAAE,CADO;IAEbpB,UAAU,EAAE,QAFC;IAGbuB,cAAc,EAAE;EAHH;AA7BgB,CAAlB,CAAf;AAoCA,eAAehI,KAAK,CAACoI,IAAN,CAAWjG,aAAX,CAAf"},"metadata":{},"sourceType":"module"}